import e,{useState as t,useMemo as r,useEffect as o}from"react";import{SSRProvider as s}from"@react-aria/ssr";import m from"../css-baseline";import i,{defaultContext as l}from"./theme-context";import n from"../utils/with-defaults";import a from"../utils/deep-merge";import{copyObject as u}from"../utils/object";import{changeTheme as d,getThemeName as c,getDocumentCSSTokens as p,getDocumentTheme as v}from"./utils";import f from"../use-ssr";import{jsx as b}from"react/jsx-runtime";import{jsxs as h}from"react/jsx-runtime";export default n((({theme:e,disableBaseline:n,children:x})=>{const{isBrowser:y}=f(),[j,B]=t(l.type),N=e=>{B((t=>t!==e?e:t))},g=e=>{const t=v(e);t&&N(t)},w=r((()=>{const e=y?p():{},t=a(u(l.theme),e),r=c(j);return{theme:t,type:r,isDark:"dark"===r}}),[j,y]);return o((()=>{var e,t,r;g(null==(e=document)?void 0:e.documentElement);const o=new MutationObserver((e=>{var t;if(e&&e.length>0&&"BODY"===(null==(t=e[0])?void 0:t.target.nodeName)){var r,o,s;const e=null==(r=document)||null==(o=r.body)||null==(s=o.dataset)?void 0:s.theme;e&&N(e)}else{var m;g(null==(m=document)?void 0:m.documentElement)}}));return o.observe(null==(t=document)?void 0:t.documentElement,{attributes:!0,attributeFilter:["data-theme","style"]}),o.observe(null==(r=document)?void 0:r.body,{attributes:!0,attributeFilter:["data-theme","style"]}),()=>o.disconnect()}),[]),o((()=>{y&&e&&null!=e&&e.className&&(d(e.className),N(c(e.className)))}),[y,e]),b(i.Provider,{value:w,children:h(s,{children:[!n&&b(m,{}),x]})})}),{disableBaseline:!1});