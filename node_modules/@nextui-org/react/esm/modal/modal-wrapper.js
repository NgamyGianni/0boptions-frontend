import e,{useEffect as r,useRef as t,useMemo as o,useState as n}from"react";import l from"../utils/with-defaults";import i from"../utils/css-transition";import{isChildElement as s}from"../utils/collections";import a from"./modal-close-button";import{KeyCode as c}from"../use-keyboard";import u from"../use-theme";import{StyledModal as m,StyledModalHideTab as d}from"./modal.styles";import f from"../utils/clsx";import{jsx as p}from"react/jsx-runtime";import{jsxs as b}from"react/jsx-runtime";import{Fragment as h}from"react/jsx-runtime";const x="nextui-modal",$=({className:e,children:l,visible:$,fullScreen:T,closeButton:k,rebound:v,animated:j,onCloseButtonClick:w,scroll:y,...N})=>{const C=t(null),g=t(null),B=t(null),[D,I]=n(!1),{isDark:S}=u();r((()=>{const e=setTimeout((()=>{I(!0),clearTimeout(e)}),300);return()=>clearTimeout(e)}),[]),r((()=>{if(!$)return;const e=document.activeElement;s(C.current,e)||g.current&&g.current.focus()}),[$]);const E=e=>{const r=e.keyCode===c.Tab;if(!$||!r)return;const t=document.activeElement;e.shiftKey?t===g.current&&B.current&&B.current.focus():t===B.current&&g.current&&g.current.focus()},K=()=>{w&&w()},F=o((()=>$?"open":"closed"),[$]),q=o((()=>b(m,{role:"dialog",tabIndex:-1,"aria-modal":$,ref:C,"data-state":F,fullScreen:T,scroll:y,closeButton:k,isDark:S,className:f(x,`${x}--${F}`,{[`${x}-fullscreen`]:T,[`${x}-with-close-button`]:k,[`${x}-rebound`]:v,[`${x}-rendered`]:D},e),...N,onKeyDown:E,children:[p(d,{role:"button",tabIndex:0,className:`${x}-hide-tab`,"aria-hidden":"true",ref:g}),k&&p(a,{onClick:K}),l,p(d,{role:"button",tabIndex:0,className:`${x}-hide-tab`,"aria-hidden":"true",ref:B})]})),[v,l]);return p(h,{children:j?p(i,{name:`${x}-wrapper`,visible:$,enterTime:20,leaveTime:20,clearTime:300,children:q}):$?q:null})};$.toString=()=>".nextui-modal-wrapper";export default l($,{className:"",visible:!1,rebound:!1});