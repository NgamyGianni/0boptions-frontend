import React from 'react';
import RadioGroup from './radio-group';
import { SimpleColors, NormalSizes } from '../utils/prop-types';
import { CSS } from '../theme/stitches.config';
import { StyledRadioDescription, RadioVariantsProps } from './radio.styles';
interface RadioEventTarget {
    checked: boolean;
}
export interface RadioEvent {
    target: RadioEventTarget;
    stopPropagation: () => void;
    preventDefault: () => void;
    nativeEvent: React.ChangeEvent;
}
interface Props {
    checked?: boolean;
    value?: string | number;
    size?: NormalSizes;
    color?: SimpleColors;
    textColor?: SimpleColors;
    disabled?: boolean;
    preventDefault?: boolean;
    onChange?: (e: RadioEvent) => void;
}
declare const defaultProps: {
    size: "xs" | "sm" | "md" | "lg" | "xl";
    color: "default" | "primary" | "secondary" | "success" | "warning" | "error";
    textColor: "default" | "primary" | "secondary" | "success" | "warning" | "error";
    disabled: boolean;
    preventDefault: boolean;
};
declare type NativeAttrs = Omit<React.InputHTMLAttributes<unknown>, keyof Props>;
export declare type RadioProps = Props & typeof defaultProps & NativeAttrs & RadioVariantsProps & {
    css?: CSS;
};
declare type RadioComponent<P = {}> = React.FC<P> & {
    Group: typeof RadioGroup;
    Desc: typeof StyledRadioDescription;
    Description: typeof StyledRadioDescription;
};
declare type ComponentProps = Partial<typeof defaultProps> & Omit<Props, keyof typeof defaultProps> & NativeAttrs & RadioVariantsProps & {
    css?: CSS;
};
declare const _default: RadioComponent<ComponentProps>;
export default _default;
