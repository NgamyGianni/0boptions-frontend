import React from 'react';
import CheckboxGroup from './checkbox-group';
import { NormalSizes, NormalColors, SimpleColors } from '../utils/prop-types';
import { CSS } from '../theme/stitches.config';
import { CheckboxVariantsProps } from './checkbox.styles';
interface CheckboxEventTarget {
    checked: boolean;
}
export interface CheckboxEvent {
    target: CheckboxEventTarget;
    stopPropagation: () => void;
    preventDefault: () => void;
    nativeEvent: React.ChangeEvent;
}
export interface Props {
    value?: string;
    color?: NormalColors;
    size?: NormalSizes;
    label?: string;
    labelColor?: SimpleColors;
    line?: boolean;
    indeterminate?: boolean;
    animated?: boolean;
    rounded?: boolean;
    checked?: boolean;
    disabled?: boolean;
    initialChecked?: boolean;
    preventDefault?: boolean;
    onChange?: (e: CheckboxEvent) => void;
    className?: string;
    as?: keyof JSX.IntrinsicElements;
}
declare const defaultProps: {
    value: string;
    size: "xs" | "sm" | "md" | "lg" | "xl";
    color: "default" | "primary" | "secondary" | "success" | "warning" | "error" | "gradient";
    labelColor: "default" | "primary" | "secondary" | "success" | "warning" | "error";
    disabled: boolean;
    preventDefault: boolean;
    initialChecked: boolean;
    indeterminate: boolean;
    rounded: boolean;
    line: boolean;
    animated: boolean;
    className: string;
};
declare type NativeAttrs = Omit<React.InputHTMLAttributes<unknown>, keyof Props>;
export declare type CheckboxProps = Props & typeof defaultProps & CheckboxVariantsProps & NativeAttrs & {
    css?: CSS;
};
declare type CheckboxComponent<P = {}> = React.FC<P> & {
    Group: typeof CheckboxGroup;
};
declare type ComponentProps = Partial<typeof defaultProps> & Omit<Props, keyof typeof defaultProps> & NativeAttrs & CheckboxVariantsProps & {
    css?: CSS;
};
declare const _default: CheckboxComponent<ComponentProps>;
export default _default;
