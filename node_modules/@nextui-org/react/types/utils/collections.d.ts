import React, { ReactNode } from 'react';
export declare const getId: () => string;
export declare const hasChild: (children: ReactNode | undefined, child: React.ElementType) => boolean;
export declare const pick: <Obj extends {
    [key: string]: any;
}, Key extends keyof Obj>(props: Key[], obj: Obj) => Pick<Obj, Key>;
export declare const pickChild: (children: ReactNode | undefined, targetChild: React.ElementType) => [ReactNode | undefined, ReactNode | undefined];
export declare const isChildElement: (parent: Element | null | undefined, child: Element | null | undefined) => boolean;
export declare const isBrowser: () => boolean;
export declare const isMac: () => boolean;
export declare const setChildrenIndex: (children: ReactNode | undefined, targetComponents?: Array<React.ElementType>) => ReactNode | undefined;
export declare const flattenArray: (arr: any[]) => any[];
