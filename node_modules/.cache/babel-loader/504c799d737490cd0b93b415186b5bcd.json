{"ast":null,"code":"import o, { useEffect as e, useMemo as r, useState as l } from \"react\";\nimport { CheckboxContext as t } from \"./checkbox-context\";\nimport i from \"../use-warning\";\nimport { StyledCheckboxGroup as s } from \"./checkbox.styles\";\nimport a from \"../utils/with-defaults\";\nimport { __DEV__ as c } from \"../utils/assertion\";\nimport { jsx as u } from \"react/jsx-runtime\";\n\nconst n = ({\n  color: o,\n  labelColor: a,\n  disabled: n,\n  onChange: d,\n  value: m,\n  size: p,\n  children: f,\n  className: b,\n  style: h,\n  ...x\n}) => {\n  const [g, v] = l([]);\n  !m && c && (m = [], i('Props \"value\" is required.', \"Checkbox Group\"));\n\n  const C = (o, e) => {\n    const r = g.filter(e => e !== o),\n          l = e ? [...r, o] : r;\n    v(l), d && d(l);\n  },\n        k = r(() => ({\n    updateState: C,\n    color: o,\n    labelColor: a,\n    size: p,\n    disabledAll: n,\n    inGroup: !0,\n    values: g\n  }), [n, g]);\n\n  return e(() => {\n    v(m);\n  }, [m.join(\",\")]), u(t.Provider, {\n    value: k,\n    children: u(s, {\n      role: \"group\",\n      size: p,\n      ...x,\n      children: f\n    })\n  });\n};\n\nn.toString = () => \".nextui-checkbox-group\";\n\nexport default a(n, {\n  color: \"default\",\n  labelColor: \"default\",\n  disabled: !1,\n  size: \"md\"\n});","map":{"version":3,"sources":["/Users/gianningamy/cryptobet/front-end/refactoring/node_modules/@nextui-org/react/esm/checkbox/checkbox-group.js"],"names":["o","useEffect","e","useMemo","r","useState","l","CheckboxContext","t","i","StyledCheckboxGroup","s","a","__DEV__","c","jsx","u","n","color","labelColor","disabled","onChange","d","value","m","size","p","children","f","className","b","style","h","x","g","v","C","filter","k","updateState","disabledAll","inGroup","values","join","Provider","role","toString"],"mappings":"AAAA,OAAOA,CAAP,IAAUC,SAAS,IAAIC,CAAvB,EAAyBC,OAAO,IAAIC,CAApC,EAAsCC,QAAQ,IAAIC,CAAlD,QAAwD,OAAxD;AAAgE,SAAOC,eAAe,IAAIC,CAA1B,QAAgC,oBAAhC;AAAqD,OAAOC,CAAP,MAAa,gBAAb;AAA8B,SAAOC,mBAAmB,IAAIC,CAA9B,QAAoC,mBAApC;AAAwD,OAAOC,CAAP,MAAa,wBAAb;AAAsC,SAAOC,OAAO,IAAIC,CAAlB,QAAwB,oBAAxB;AAA6C,SAAOC,GAAG,IAAIC,CAAd,QAAoB,mBAApB;;AAAwC,MAAMC,CAAC,GAAC,CAAC;AAACC,EAAAA,KAAK,EAAClB,CAAP;AAASmB,EAAAA,UAAU,EAACP,CAApB;AAAsBQ,EAAAA,QAAQ,EAACH,CAA/B;AAAiCI,EAAAA,QAAQ,EAACC,CAA1C;AAA4CC,EAAAA,KAAK,EAACC,CAAlD;AAAoDC,EAAAA,IAAI,EAACC,CAAzD;AAA2DC,EAAAA,QAAQ,EAACC,CAApE;AAAsEC,EAAAA,SAAS,EAACC,CAAhF;AAAkFC,EAAAA,KAAK,EAACC,CAAxF;AAA0F,KAAGC;AAA7F,CAAD,KAAmG;AAAC,QAAK,CAACC,CAAD,EAAGC,CAAH,IAAM7B,CAAC,CAAC,EAAD,CAAZ;AAAiB,GAACkB,CAAD,IAAIV,CAAJ,KAAQU,CAAC,GAAC,EAAF,EAAKf,CAAC,CAAC,4BAAD,EAA8B,gBAA9B,CAAd;;AAA+D,QAAM2B,CAAC,GAAC,CAACpC,CAAD,EAAGE,CAAH,KAAO;AAAC,UAAME,CAAC,GAAC8B,CAAC,CAACG,MAAF,CAAUnC,CAAC,IAAEA,CAAC,KAAGF,CAAjB,CAAR;AAAA,UAA6BM,CAAC,GAACJ,CAAC,GAAC,CAAC,GAAGE,CAAJ,EAAMJ,CAAN,CAAD,GAAUI,CAA1C;AAA4C+B,IAAAA,CAAC,CAAC7B,CAAD,CAAD,EAAKgB,CAAC,IAAEA,CAAC,CAAChB,CAAD,CAAT;AAAa,GAAzE;AAAA,QAA0EgC,CAAC,GAAClC,CAAC,CAAE,OAAK;AAACmC,IAAAA,WAAW,EAACH,CAAb;AAAelB,IAAAA,KAAK,EAAClB,CAArB;AAAuBmB,IAAAA,UAAU,EAACP,CAAlC;AAAoCa,IAAAA,IAAI,EAACC,CAAzC;AAA2Cc,IAAAA,WAAW,EAACvB,CAAvD;AAAyDwB,IAAAA,OAAO,EAAC,CAAC,CAAlE;AAAoEC,IAAAA,MAAM,EAACR;AAA3E,GAAL,CAAF,EAAuF,CAACjB,CAAD,EAAGiB,CAAH,CAAvF,CAA7E;;AAA2K,SAAOhC,CAAC,CAAE,MAAI;AAACiC,IAAAA,CAAC,CAACX,CAAD,CAAD;AAAK,GAAZ,EAAc,CAACA,CAAC,CAACmB,IAAF,CAAO,GAAP,CAAD,CAAd,CAAD,EAA8B3B,CAAC,CAACR,CAAC,CAACoC,QAAH,EAAY;AAACrB,IAAAA,KAAK,EAACe,CAAP;AAASX,IAAAA,QAAQ,EAACX,CAAC,CAACL,CAAD,EAAG;AAACkC,MAAAA,IAAI,EAAC,OAAN;AAAcpB,MAAAA,IAAI,EAACC,CAAnB;AAAqB,SAAGO,CAAxB;AAA0BN,MAAAA,QAAQ,EAACC;AAAnC,KAAH;AAAnB,GAAZ,CAAtC;AAAiH,CAAxd;;AAAydX,CAAC,CAAC6B,QAAF,GAAW,MAAI,wBAAf;;AAAwC,eAAelC,CAAC,CAACK,CAAD,EAAG;AAACC,EAAAA,KAAK,EAAC,SAAP;AAAiBC,EAAAA,UAAU,EAAC,SAA5B;AAAsCC,EAAAA,QAAQ,EAAC,CAAC,CAAhD;AAAkDK,EAAAA,IAAI,EAAC;AAAvD,CAAH,CAAhB","sourcesContent":["import o,{useEffect as e,useMemo as r,useState as l}from\"react\";import{CheckboxContext as t}from\"./checkbox-context\";import i from\"../use-warning\";import{StyledCheckboxGroup as s}from\"./checkbox.styles\";import a from\"../utils/with-defaults\";import{__DEV__ as c}from\"../utils/assertion\";import{jsx as u}from\"react/jsx-runtime\";const n=({color:o,labelColor:a,disabled:n,onChange:d,value:m,size:p,children:f,className:b,style:h,...x})=>{const[g,v]=l([]);!m&&c&&(m=[],i('Props \"value\" is required.',\"Checkbox Group\"));const C=(o,e)=>{const r=g.filter((e=>e!==o)),l=e?[...r,o]:r;v(l),d&&d(l)},k=r((()=>({updateState:C,color:o,labelColor:a,size:p,disabledAll:n,inGroup:!0,values:g})),[n,g]);return e((()=>{v(m)}),[m.join(\",\")]),u(t.Provider,{value:k,children:u(s,{role:\"group\",size:p,...x,children:f})})};n.toString=()=>\".nextui-checkbox-group\";export default a(n,{color:\"default\",labelColor:\"default\",disabled:!1,size:\"md\"});"]},"metadata":{},"sourceType":"module"}