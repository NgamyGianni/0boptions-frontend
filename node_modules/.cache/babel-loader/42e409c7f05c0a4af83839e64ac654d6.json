{"ast":null,"code":"import t, { useMemo as o, useState as e, useRef as r } from \"react\";\nimport i from \"../tooltip\";\nimport n from \"../utils/with-defaults\";\nimport p from \"./snippet-icon\";\nimport s from \"../use-clipboard\";\nimport { StyledSnippet as l, StyledSnippetPre as c, StyledSnippetCopyButton as m } from \"./snippet.styles\";\nimport { __DEV__ as u } from \"../utils/assertion\";\nimport { jsx as a } from \"react/jsx-runtime\";\nimport { jsxs as d } from \"react/jsx-runtime\";\n\nconst x = ({\n  bordered: t,\n  children: n,\n  symbol: u,\n  showTooltip: x,\n  text: f,\n  tooltipCopyText: y,\n  tooltipCopiedText: h,\n  tooltipColor: C,\n  copy: b,\n  ...T\n}) => {\n  const [N, $] = e(!1),\n        {\n    copy: j\n  } = s(),\n        w = r(null),\n        A = f && Array.isArray(f),\n        g = o(() => \"prevent\" !== b, [b]),\n        k = o(() => A ? (t => t.reduce((t, o) => o ? t ? `${t}\\n${o}` : o : t, \"\"))(f) : n ? w.current ? w.current.textContent : \"\" : f, [w.current, n, f]),\n        v = o(() => {\n    const t = u.trim();\n    return t ? `${t} ` : \"\";\n  }, [u]),\n        S = () => {\n    k && g && (j(k), \"slient\" !== b && $(!0));\n  };\n\n  return d(l, { ...T,\n    children: [A ? f.map((t, o) => a(c, {\n      css: {\n        \"&:before\": {\n          content: v,\n          us: \"none\"\n        }\n      },\n      className: \"nextui-snippet-pre\",\n      children: t\n    }, `${o}-${t}`)) : a(c, {\n      css: {\n        \"&:before\": {\n          content: v,\n          us: \"none\"\n        }\n      },\n      className: \"nextui-snippet-pre\",\n      ref: w,\n      children: n || f\n    }), g && \"slient\" !== b ? a(i, {\n      hideArrow: !0,\n      rounded: !0,\n      color: C,\n      content: N ? h : y,\n      onVisibleChange: () => {\n        setTimeout(() => {\n          $(!1);\n        }, 300);\n      },\n      children: a(m, {\n        className: \"nextui-snippet-copy-button\",\n        onClick: S,\n        children: a(p, {})\n      })\n    }) : \"prevent\" !== b && a(m, {\n      className: \"nextui-snippet-copy-button\",\n      onClick: S,\n      children: a(p, {})\n    })]\n  });\n};\n\nu && (x.displayName = \"NextUI - Snippet\"), x.toString = () => \".nextui-snippet\";\nconst f = t.memo(x);\nexport default n(f, {\n  symbol: \"$\",\n  showTooltip: !0,\n  copy: \"default\",\n  tooltipColor: \"default\",\n  tooltipCopyText: \"Copy\",\n  tooltipCopiedText: \"Copied\"\n});","map":{"version":3,"sources":["/Users/gianningamy/cryptobet/front-end/refactoring/node_modules/@nextui-org/react/esm/snippet/snippet.js"],"names":["t","useMemo","o","useState","e","useRef","r","i","n","p","s","StyledSnippet","l","StyledSnippetPre","c","StyledSnippetCopyButton","m","__DEV__","u","jsx","a","jsxs","d","x","bordered","children","symbol","showTooltip","text","f","tooltipCopyText","y","tooltipCopiedText","h","tooltipColor","C","copy","b","T","N","$","j","w","A","Array","isArray","g","k","reduce","current","textContent","v","trim","S","map","css","content","us","className","ref","hideArrow","rounded","color","onVisibleChange","setTimeout","onClick","displayName","toString","memo"],"mappings":"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","sourcesContent":["import t,{useMemo as o,useState as e,useRef as r}from\"react\";import i from\"../tooltip\";import n from\"../utils/with-defaults\";import p from\"./snippet-icon\";import s from\"../use-clipboard\";import{StyledSnippet as l,StyledSnippetPre as c,StyledSnippetCopyButton as m}from\"./snippet.styles\";import{__DEV__ as u}from\"../utils/assertion\";import{jsx as a}from\"react/jsx-runtime\";import{jsxs as d}from\"react/jsx-runtime\";const x=({bordered:t,children:n,symbol:u,showTooltip:x,text:f,tooltipCopyText:y,tooltipCopiedText:h,tooltipColor:C,copy:b,...T})=>{const[N,$]=e(!1),{copy:j}=s(),w=r(null),A=f&&Array.isArray(f),g=o((()=>\"prevent\"!==b),[b]),k=o((()=>A?(t=>t.reduce(((t,o)=>o?t?`${t}\\n${o}`:o:t),\"\"))(f):n?w.current?w.current.textContent:\"\":f),[w.current,n,f]),v=o((()=>{const t=u.trim();return t?`${t} `:\"\"}),[u]),S=()=>{k&&g&&(j(k),\"slient\"!==b&&$(!0))};return d(l,{...T,children:[A?f.map(((t,o)=>a(c,{css:{\"&:before\":{content:v,us:\"none\"}},className:\"nextui-snippet-pre\",children:t},`${o}-${t}`))):a(c,{css:{\"&:before\":{content:v,us:\"none\"}},className:\"nextui-snippet-pre\",ref:w,children:n||f}),g&&\"slient\"!==b?a(i,{hideArrow:!0,rounded:!0,color:C,content:N?h:y,onVisibleChange:()=>{setTimeout((()=>{$(!1)}),300)},children:a(m,{className:\"nextui-snippet-copy-button\",onClick:S,children:a(p,{})})}):\"prevent\"!==b&&a(m,{className:\"nextui-snippet-copy-button\",onClick:S,children:a(p,{})})]})};u&&(x.displayName=\"NextUI - Snippet\"),x.toString=()=>\".nextui-snippet\";const f=t.memo(x);export default n(f,{symbol:\"$\",showTooltip:!0,copy:\"default\",tooltipColor:\"default\",tooltipCopyText:\"Copy\",tooltipCopiedText:\"Copied\"});"]},"metadata":{},"sourceType":"module"}