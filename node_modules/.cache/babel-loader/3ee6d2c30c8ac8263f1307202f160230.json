{"ast":null,"code":"/* eslint no-unused-vars: \"off\" */\nexport default function slidePrev(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    animating,\n    snapGrid,\n    slidesGrid,\n    rtlTranslate,\n    enabled\n  } = swiper;\n  if (!enabled) return swiper;\n\n  if (params.loop) {\n    if (animating && params.loopPreventsSlide) return false;\n    swiper.loopFix(); // eslint-disable-next-line\n\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n\n  if (typeof prevSnap === 'undefined' && params.cssMode) {\n    let prevSnapIndex;\n    snapGrid.forEach((snap, snapIndex) => {\n      if (normalizedTranslate >= snap) {\n        // prevSnap = snap;\n        prevSnapIndex = snapIndex;\n      }\n    });\n\n    if (typeof prevSnapIndex !== 'undefined') {\n      prevSnap = snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];\n    }\n  }\n\n  let prevIndex = 0;\n\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n\n    if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n      prevIndex = prevIndex - swiper.slidesPerViewDynamic('previous', true) + 1;\n      prevIndex = Math.max(prevIndex, 0);\n    }\n  }\n\n  if (params.rewind && swiper.isBeginning) {\n    return swiper.slideTo(swiper.slides.length - 1, speed, runCallbacks, internal);\n  }\n\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}","map":{"version":3,"sources":["/Users/gianningamy/cryptobet/front-end/master/node_modules/swiper/core/slide/slidePrev.js"],"names":["slidePrev","speed","params","runCallbacks","internal","swiper","animating","snapGrid","slidesGrid","rtlTranslate","enabled","loop","loopPreventsSlide","loopFix","_clientLeft","$wrapperEl","clientLeft","translate","normalize","val","Math","floor","abs","normalizedTranslate","normalizedSnapGrid","map","prevSnap","indexOf","cssMode","prevSnapIndex","forEach","snap","snapIndex","prevIndex","activeIndex","slidesPerView","slidesPerGroup","slidesPerGroupAuto","slidesPerViewDynamic","max","rewind","isBeginning","slideTo","slides","length"],"mappings":"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","sourcesContent":["/* eslint no-unused-vars: \"off\" */\nexport default function slidePrev(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    animating,\n    snapGrid,\n    slidesGrid,\n    rtlTranslate,\n    enabled\n  } = swiper;\n  if (!enabled) return swiper;\n\n  if (params.loop) {\n    if (animating && params.loopPreventsSlide) return false;\n    swiper.loopFix(); // eslint-disable-next-line\n\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n\n  if (typeof prevSnap === 'undefined' && params.cssMode) {\n    let prevSnapIndex;\n    snapGrid.forEach((snap, snapIndex) => {\n      if (normalizedTranslate >= snap) {\n        // prevSnap = snap;\n        prevSnapIndex = snapIndex;\n      }\n    });\n\n    if (typeof prevSnapIndex !== 'undefined') {\n      prevSnap = snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];\n    }\n  }\n\n  let prevIndex = 0;\n\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n\n    if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n      prevIndex = prevIndex - swiper.slidesPerViewDynamic('previous', true) + 1;\n      prevIndex = Math.max(prevIndex, 0);\n    }\n  }\n\n  if (params.rewind && swiper.isBeginning) {\n    return swiper.slideTo(swiper.slides.length - 1, speed, runCallbacks, internal);\n  }\n\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}"]},"metadata":{},"sourceType":"module"}