{"ast":null,"code":"/* eslint no-unused-vars: \"off\" */\nexport default function slideNext(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    animating,\n    enabled,\n    params\n  } = swiper;\n  if (!enabled) return swiper;\n  let perGroup = params.slidesPerGroup;\n\n  if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n    perGroup = Math.max(swiper.slidesPerViewDynamic('current', true), 1);\n  }\n\n  const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;\n\n  if (params.loop) {\n    if (animating && params.loopPreventsSlide) return false;\n    swiper.loopFix(); // eslint-disable-next-line\n\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n\n  if (params.rewind && swiper.isEnd) {\n    return swiper.slideTo(0, speed, runCallbacks, internal);\n  }\n\n  return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n}","map":{"version":3,"sources":["/Users/gianningamy/cryptobet/front-end/master/node_modules/swiper/core/slide/slideNext.js"],"names":["slideNext","speed","params","runCallbacks","internal","swiper","animating","enabled","perGroup","slidesPerGroup","slidesPerView","slidesPerGroupAuto","Math","max","slidesPerViewDynamic","increment","activeIndex","slidesPerGroupSkip","loop","loopPreventsSlide","loopFix","_clientLeft","$wrapperEl","clientLeft","rewind","isEnd","slideTo"],"mappings":"AAAA;AACA,eAAe,SAASA,SAAT,CAAmBC,KAAK,GAAG,KAAKC,MAAL,CAAYD,KAAvC,EAA8CE,YAAY,GAAG,IAA7D,EAAmEC,QAAnE,EAA6E;AAC1F,QAAMC,MAAM,GAAG,IAAf;AACA,QAAM;AACJC,IAAAA,SADI;AAEJC,IAAAA,OAFI;AAGJL,IAAAA;AAHI,MAIFG,MAJJ;AAKA,MAAI,CAACE,OAAL,EAAc,OAAOF,MAAP;AACd,MAAIG,QAAQ,GAAGN,MAAM,CAACO,cAAtB;;AAEA,MAAIP,MAAM,CAACQ,aAAP,KAAyB,MAAzB,IAAmCR,MAAM,CAACO,cAAP,KAA0B,CAA7D,IAAkEP,MAAM,CAACS,kBAA7E,EAAiG;AAC/FH,IAAAA,QAAQ,GAAGI,IAAI,CAACC,GAAL,CAASR,MAAM,CAACS,oBAAP,CAA4B,SAA5B,EAAuC,IAAvC,CAAT,EAAuD,CAAvD,CAAX;AACD;;AAED,QAAMC,SAAS,GAAGV,MAAM,CAACW,WAAP,GAAqBd,MAAM,CAACe,kBAA5B,GAAiD,CAAjD,GAAqDT,QAAvE;;AAEA,MAAIN,MAAM,CAACgB,IAAX,EAAiB;AACf,QAAIZ,SAAS,IAAIJ,MAAM,CAACiB,iBAAxB,EAA2C,OAAO,KAAP;AAC3Cd,IAAAA,MAAM,CAACe,OAAP,GAFe,CAEG;;AAElBf,IAAAA,MAAM,CAACgB,WAAP,GAAqBhB,MAAM,CAACiB,UAAP,CAAkB,CAAlB,EAAqBC,UAA1C;AACD;;AAED,MAAIrB,MAAM,CAACsB,MAAP,IAAiBnB,MAAM,CAACoB,KAA5B,EAAmC;AACjC,WAAOpB,MAAM,CAACqB,OAAP,CAAe,CAAf,EAAkBzB,KAAlB,EAAyBE,YAAzB,EAAuCC,QAAvC,CAAP;AACD;;AAED,SAAOC,MAAM,CAACqB,OAAP,CAAerB,MAAM,CAACW,WAAP,GAAqBD,SAApC,EAA+Cd,KAA/C,EAAsDE,YAAtD,EAAoEC,QAApE,CAAP;AACD","sourcesContent":["/* eslint no-unused-vars: \"off\" */\nexport default function slideNext(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    animating,\n    enabled,\n    params\n  } = swiper;\n  if (!enabled) return swiper;\n  let perGroup = params.slidesPerGroup;\n\n  if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n    perGroup = Math.max(swiper.slidesPerViewDynamic('current', true), 1);\n  }\n\n  const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;\n\n  if (params.loop) {\n    if (animating && params.loopPreventsSlide) return false;\n    swiper.loopFix(); // eslint-disable-next-line\n\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n\n  if (params.rewind && swiper.isEnd) {\n    return swiper.slideTo(0, speed, runCallbacks, internal);\n  }\n\n  return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n}"]},"metadata":{},"sourceType":"module"}