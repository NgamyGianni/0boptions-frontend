{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { forwardRef, useRef, useImperativeHandle } from 'react';\nimport { useIsomorphicLayoutEffect } from '../shared/use-isomorphic-layout-effect';\nimport { classNames, getExtraAttrs, getSlots, emit } from '../shared/utils';\nimport { colorClasses, actionsAttrs, actionsClasses, routerAttrs, routerClasses } from '../shared/mixins';\nimport { useIcon } from '../shared/use-icon';\nimport { f7ready, f7 } from '../shared/f7';\nvar TreeviewItem = /*#__PURE__*/forwardRef(function (props, ref) {\n  var className = props.className,\n      id = props.id,\n      style = props.style,\n      toggle = props.toggle,\n      itemToggle = props.itemToggle,\n      selectable = props.selectable,\n      selected = props.selected,\n      opened = props.opened,\n      label = props.label,\n      loadChildren = props.loadChildren,\n      link = props.link;\n  var extraAttrs = getExtraAttrs(props);\n  var elRef = useRef(null);\n\n  var onClick = function onClick(event) {\n    emit(props, 'click', event);\n  };\n\n  var onOpen = function onOpen(el) {\n    if (elRef.current !== el) return;\n    emit(props, 'treeviewOpen', el);\n  };\n\n  var onClose = function onClose(el) {\n    if (elRef.current !== el) return;\n    emit(props, 'treeviewClose', el);\n  };\n\n  var onLoadChildren = function onLoadChildren(el, done) {\n    if (elRef.current !== el) return;\n    emit(props, 'treeviewLoadChildren', el, done);\n  };\n\n  useImperativeHandle(ref, function () {\n    return {\n      el: elRef.current\n    };\n  });\n\n  var attachEvents = function attachEvents() {\n    if (!elRef.current) return;\n    f7ready(function () {\n      f7.on('treeviewOpen', onOpen);\n      f7.on('treeviewClose', onClose);\n      f7.on('treeviewLoadChildren', onLoadChildren);\n    });\n  };\n\n  var detachEvents = function detachEvents() {\n    if (!f7) return;\n    f7.off('treeviewOpen', onOpen);\n    f7.off('treeviewClose', onClose);\n    f7.off('treeviewLoadChildren', onLoadChildren);\n  };\n\n  useIsomorphicLayoutEffect(function () {\n    attachEvents();\n    return detachEvents;\n  });\n  var slots = getSlots(props);\n  var hasChildren = slots.default && slots.default.length || slots.children && slots.children.length || slots['children-start'] && slots['children-start'].length;\n  var needToggle = typeof toggle === 'undefined' ? hasChildren : toggle;\n  var iconEl = useIcon(props);\n  var TreeviewRootTag = link || link === '' ? 'a' : 'div';\n  var classes = classNames(className, 'treeview-item', {\n    'treeview-item-opened': opened,\n    'treeview-load-children': loadChildren\n  }, colorClasses(props));\n  var itemRootClasses = classNames('treeview-item-root', {\n    'treeview-item-selectable': selectable,\n    'treeview-item-selected': selected,\n    'treeview-item-toggle': itemToggle\n  }, routerClasses(props), actionsClasses(props));\n  var href = link;\n  if (link === true) href = '#';\n  if (link === false) href = undefined; // no href attribute\n\n  var itemRootAttrs = _extends({\n    href: href\n  }, routerAttrs(props), actionsAttrs(props));\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    id: id,\n    style: style,\n    className: classes,\n    ref: elRef\n  }, extraAttrs), /*#__PURE__*/React.createElement(TreeviewRootTag, _extends({\n    onClick: onClick,\n    className: itemRootClasses\n  }, itemRootAttrs), slots['root-start'], needToggle && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"treeview-toggle\"\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"treeview-item-content\"\n  }, slots['content-start'], iconEl, slots.media, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"treeview-item-label\"\n  }, slots['label-start'], label, slots.label), slots.content, slots['content-end']), slots.root, slots['root-end']), hasChildren && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"treeview-item-children\"\n  }, slots['children-start'], slots.default, slots.children));\n});\nTreeviewItem.displayName = 'f7-treeview-item';\nexport default TreeviewItem;","map":{"version":3,"sources":["/Users/gianningamy/cryptobet/front-end/master/node_modules/framework7-react/esm/components/treeview-item.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","forwardRef","useRef","useImperativeHandle","useIsomorphicLayoutEffect","classNames","getExtraAttrs","getSlots","emit","colorClasses","actionsAttrs","actionsClasses","routerAttrs","routerClasses","useIcon","f7ready","f7","TreeviewItem","props","ref","className","id","style","toggle","itemToggle","selectable","selected","opened","label","loadChildren","link","extraAttrs","elRef","onClick","event","onOpen","el","current","onClose","onLoadChildren","done","attachEvents","on","detachEvents","off","slots","hasChildren","default","children","needToggle","iconEl","TreeviewRootTag","classes","itemRootClasses","href","undefined","itemRootAttrs","createElement","media","content","root","displayName"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { forwardRef, useRef, useImperativeHandle } from 'react';\nimport { useIsomorphicLayoutEffect } from '../shared/use-isomorphic-layout-effect';\nimport { classNames, getExtraAttrs, getSlots, emit } from '../shared/utils';\nimport { colorClasses, actionsAttrs, actionsClasses, routerAttrs, routerClasses } from '../shared/mixins';\nimport { useIcon } from '../shared/use-icon';\nimport { f7ready, f7 } from '../shared/f7';\n\nvar TreeviewItem = /*#__PURE__*/forwardRef(function (props, ref) {\n  var className = props.className,\n      id = props.id,\n      style = props.style,\n      toggle = props.toggle,\n      itemToggle = props.itemToggle,\n      selectable = props.selectable,\n      selected = props.selected,\n      opened = props.opened,\n      label = props.label,\n      loadChildren = props.loadChildren,\n      link = props.link;\n  var extraAttrs = getExtraAttrs(props);\n  var elRef = useRef(null);\n\n  var onClick = function onClick(event) {\n    emit(props, 'click', event);\n  };\n\n  var onOpen = function onOpen(el) {\n    if (elRef.current !== el) return;\n    emit(props, 'treeviewOpen', el);\n  };\n\n  var onClose = function onClose(el) {\n    if (elRef.current !== el) return;\n    emit(props, 'treeviewClose', el);\n  };\n\n  var onLoadChildren = function onLoadChildren(el, done) {\n    if (elRef.current !== el) return;\n    emit(props, 'treeviewLoadChildren', el, done);\n  };\n\n  useImperativeHandle(ref, function () {\n    return {\n      el: elRef.current\n    };\n  });\n\n  var attachEvents = function attachEvents() {\n    if (!elRef.current) return;\n    f7ready(function () {\n      f7.on('treeviewOpen', onOpen);\n      f7.on('treeviewClose', onClose);\n      f7.on('treeviewLoadChildren', onLoadChildren);\n    });\n  };\n\n  var detachEvents = function detachEvents() {\n    if (!f7) return;\n    f7.off('treeviewOpen', onOpen);\n    f7.off('treeviewClose', onClose);\n    f7.off('treeviewLoadChildren', onLoadChildren);\n  };\n\n  useIsomorphicLayoutEffect(function () {\n    attachEvents();\n    return detachEvents;\n  });\n  var slots = getSlots(props);\n  var hasChildren = slots.default && slots.default.length || slots.children && slots.children.length || slots['children-start'] && slots['children-start'].length;\n  var needToggle = typeof toggle === 'undefined' ? hasChildren : toggle;\n  var iconEl = useIcon(props);\n  var TreeviewRootTag = link || link === '' ? 'a' : 'div';\n  var classes = classNames(className, 'treeview-item', {\n    'treeview-item-opened': opened,\n    'treeview-load-children': loadChildren\n  }, colorClasses(props));\n  var itemRootClasses = classNames('treeview-item-root', {\n    'treeview-item-selectable': selectable,\n    'treeview-item-selected': selected,\n    'treeview-item-toggle': itemToggle\n  }, routerClasses(props), actionsClasses(props));\n  var href = link;\n  if (link === true) href = '#';\n  if (link === false) href = undefined; // no href attribute\n\n  var itemRootAttrs = _extends({\n    href: href\n  }, routerAttrs(props), actionsAttrs(props));\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    id: id,\n    style: style,\n    className: classes,\n    ref: elRef\n  }, extraAttrs), /*#__PURE__*/React.createElement(TreeviewRootTag, _extends({\n    onClick: onClick,\n    className: itemRootClasses\n  }, itemRootAttrs), slots['root-start'], needToggle && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"treeview-toggle\"\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"treeview-item-content\"\n  }, slots['content-start'], iconEl, slots.media, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"treeview-item-label\"\n  }, slots['label-start'], label, slots.label), slots.content, slots['content-end']), slots.root, slots['root-end']), hasChildren && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"treeview-item-children\"\n  }, slots['children-start'], slots.default, slots.children));\n});\nTreeviewItem.displayName = 'f7-treeview-item';\nexport default TreeviewItem;"]},"metadata":{},"sourceType":"module"}