{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { forwardRef, useRef, useImperativeHandle } from 'react';\nimport { classNames, getExtraAttrs, getSlots, emit } from '../shared/utils';\nimport { colorClasses } from '../shared/mixins';\nimport { useTooltip } from '../shared/use-tooltip';\nimport { useIcon } from '../shared/use-icon';\nvar Chip = /*#__PURE__*/forwardRef(function (props, ref) {\n  var className = props.className,\n      id = props.id,\n      style = props.style,\n      media = props.media,\n      text = props.text,\n      deleteable = props.deleteable,\n      mediaTextColor = props.mediaTextColor,\n      mediaBgColor = props.mediaBgColor,\n      outline = props.outline;\n  var extraAttrs = getExtraAttrs(props);\n\n  var onClick = function onClick(event) {\n    emit(props, 'click', event);\n  };\n\n  var onDeleteClick = function onDeleteClick(event) {\n    emit(props, 'delete', event);\n  };\n\n  var elRef = useRef(null);\n  useImperativeHandle(ref, function () {\n    return {\n      el: elRef.current\n    };\n  });\n  useTooltip(elRef, props);\n  var slots = getSlots(props);\n  var iconEl = useIcon(props);\n  var mediaEl;\n  var labelEl;\n  var deleteEl;\n\n  if (media || iconEl || slots && slots.media) {\n    var mediaClasses = classNames('chip-media', mediaTextColor && \"text-color-\" + mediaTextColor, mediaBgColor && \"bg-color-\" + mediaBgColor);\n    mediaEl = /*#__PURE__*/React.createElement(\"div\", {\n      className: mediaClasses\n    }, iconEl, media, slots.media);\n  }\n\n  if (text || slots && (slots.text || slots.default && slots.default.length)) {\n    labelEl = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chip-label\"\n    }, text, slots.text, slots.default);\n  }\n\n  if (deleteable) {\n    deleteEl = /*#__PURE__*/React.createElement(\"a\", {\n      className: \"chip-delete\",\n      onClick: onDeleteClick\n    });\n  }\n\n  var classes = classNames(className, 'chip', {\n    'chip-outline': outline\n  }, colorClasses(props));\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    id: id,\n    style: style,\n    className: classes,\n    ref: elRef\n  }, extraAttrs, {\n    onClick: onClick\n  }), mediaEl, labelEl, deleteEl);\n});\nChip.displayName = 'f7-chip';\nexport default Chip;","map":{"version":3,"sources":["/Users/gianningamy/cryptobet/front-end/master/node_modules/framework7-react/esm/components/chip.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","forwardRef","useRef","useImperativeHandle","classNames","getExtraAttrs","getSlots","emit","colorClasses","useTooltip","useIcon","Chip","props","ref","className","id","style","media","text","deleteable","mediaTextColor","mediaBgColor","outline","extraAttrs","onClick","event","onDeleteClick","elRef","el","current","slots","iconEl","mediaEl","labelEl","deleteEl","mediaClasses","createElement","default","classes","displayName"],"mappings":"AAAA,SAASA,QAAT,GAAoB;AAAEA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,WAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,YAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,UAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,WAAOL,MAAP;AAAgB,GAA5P;;AAA8P,SAAOH,QAAQ,CAACY,KAAT,CAAe,IAAf,EAAqBP,SAArB,CAAP;AAAyC;;AAE7T,OAAOQ,KAAP,IAAgBC,UAAhB,EAA4BC,MAA5B,EAAoCC,mBAApC,QAA+D,OAA/D;AACA,SAASC,UAAT,EAAqBC,aAArB,EAAoCC,QAApC,EAA8CC,IAA9C,QAA0D,iBAA1D;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,OAAT,QAAwB,oBAAxB;AAEA,IAAIC,IAAI,GAAG,aAAaV,UAAU,CAAC,UAAUW,KAAV,EAAiBC,GAAjB,EAAsB;AACvD,MAAIC,SAAS,GAAGF,KAAK,CAACE,SAAtB;AAAA,MACIC,EAAE,GAAGH,KAAK,CAACG,EADf;AAAA,MAEIC,KAAK,GAAGJ,KAAK,CAACI,KAFlB;AAAA,MAGIC,KAAK,GAAGL,KAAK,CAACK,KAHlB;AAAA,MAIIC,IAAI,GAAGN,KAAK,CAACM,IAJjB;AAAA,MAKIC,UAAU,GAAGP,KAAK,CAACO,UALvB;AAAA,MAMIC,cAAc,GAAGR,KAAK,CAACQ,cAN3B;AAAA,MAOIC,YAAY,GAAGT,KAAK,CAACS,YAPzB;AAAA,MAQIC,OAAO,GAAGV,KAAK,CAACU,OARpB;AASA,MAAIC,UAAU,GAAGlB,aAAa,CAACO,KAAD,CAA9B;;AAEA,MAAIY,OAAO,GAAG,SAASA,OAAT,CAAiBC,KAAjB,EAAwB;AACpClB,IAAAA,IAAI,CAACK,KAAD,EAAQ,OAAR,EAAiBa,KAAjB,CAAJ;AACD,GAFD;;AAIA,MAAIC,aAAa,GAAG,SAASA,aAAT,CAAuBD,KAAvB,EAA8B;AAChDlB,IAAAA,IAAI,CAACK,KAAD,EAAQ,QAAR,EAAkBa,KAAlB,CAAJ;AACD,GAFD;;AAIA,MAAIE,KAAK,GAAGzB,MAAM,CAAC,IAAD,CAAlB;AACAC,EAAAA,mBAAmB,CAACU,GAAD,EAAM,YAAY;AACnC,WAAO;AACLe,MAAAA,EAAE,EAAED,KAAK,CAACE;AADL,KAAP;AAGD,GAJkB,CAAnB;AAKApB,EAAAA,UAAU,CAACkB,KAAD,EAAQf,KAAR,CAAV;AACA,MAAIkB,KAAK,GAAGxB,QAAQ,CAACM,KAAD,CAApB;AACA,MAAImB,MAAM,GAAGrB,OAAO,CAACE,KAAD,CAApB;AACA,MAAIoB,OAAJ;AACA,MAAIC,OAAJ;AACA,MAAIC,QAAJ;;AAEA,MAAIjB,KAAK,IAAIc,MAAT,IAAmBD,KAAK,IAAIA,KAAK,CAACb,KAAtC,EAA6C;AAC3C,QAAIkB,YAAY,GAAG/B,UAAU,CAAC,YAAD,EAAegB,cAAc,IAAI,gBAAgBA,cAAjD,EAAiEC,YAAY,IAAI,cAAcA,YAA/F,CAA7B;AACAW,IAAAA,OAAO,GAAG,aAAahC,KAAK,CAACoC,aAAN,CAAoB,KAApB,EAA2B;AAChDtB,MAAAA,SAAS,EAAEqB;AADqC,KAA3B,EAEpBJ,MAFoB,EAEZd,KAFY,EAELa,KAAK,CAACb,KAFD,CAAvB;AAGD;;AAED,MAAIC,IAAI,IAAIY,KAAK,KAAKA,KAAK,CAACZ,IAAN,IAAcY,KAAK,CAACO,OAAN,IAAiBP,KAAK,CAACO,OAAN,CAAc5C,MAAlD,CAAjB,EAA4E;AAC1EwC,IAAAA,OAAO,GAAG,aAAajC,KAAK,CAACoC,aAAN,CAAoB,KAApB,EAA2B;AAChDtB,MAAAA,SAAS,EAAE;AADqC,KAA3B,EAEpBI,IAFoB,EAEdY,KAAK,CAACZ,IAFQ,EAEFY,KAAK,CAACO,OAFJ,CAAvB;AAGD;;AAED,MAAIlB,UAAJ,EAAgB;AACde,IAAAA,QAAQ,GAAG,aAAalC,KAAK,CAACoC,aAAN,CAAoB,GAApB,EAAyB;AAC/CtB,MAAAA,SAAS,EAAE,aADoC;AAE/CU,MAAAA,OAAO,EAAEE;AAFsC,KAAzB,CAAxB;AAID;;AAED,MAAIY,OAAO,GAAGlC,UAAU,CAACU,SAAD,EAAY,MAAZ,EAAoB;AAC1C,oBAAgBQ;AAD0B,GAApB,EAErBd,YAAY,CAACI,KAAD,CAFS,CAAxB;AAGA,SAAO,aAAaZ,KAAK,CAACoC,aAAN,CAAoB,KAApB,EAA2BjD,QAAQ,CAAC;AACtD4B,IAAAA,EAAE,EAAEA,EADkD;AAEtDC,IAAAA,KAAK,EAAEA,KAF+C;AAGtDF,IAAAA,SAAS,EAAEwB,OAH2C;AAItDzB,IAAAA,GAAG,EAAEc;AAJiD,GAAD,EAKpDJ,UALoD,EAKxC;AACbC,IAAAA,OAAO,EAAEA;AADI,GALwC,CAAnC,EAOhBQ,OAPgB,EAOPC,OAPO,EAOEC,QAPF,CAApB;AAQD,CAhEiC,CAAlC;AAiEAvB,IAAI,CAAC4B,WAAL,GAAmB,SAAnB;AACA,eAAe5B,IAAf","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { forwardRef, useRef, useImperativeHandle } from 'react';\nimport { classNames, getExtraAttrs, getSlots, emit } from '../shared/utils';\nimport { colorClasses } from '../shared/mixins';\nimport { useTooltip } from '../shared/use-tooltip';\nimport { useIcon } from '../shared/use-icon';\n\nvar Chip = /*#__PURE__*/forwardRef(function (props, ref) {\n  var className = props.className,\n      id = props.id,\n      style = props.style,\n      media = props.media,\n      text = props.text,\n      deleteable = props.deleteable,\n      mediaTextColor = props.mediaTextColor,\n      mediaBgColor = props.mediaBgColor,\n      outline = props.outline;\n  var extraAttrs = getExtraAttrs(props);\n\n  var onClick = function onClick(event) {\n    emit(props, 'click', event);\n  };\n\n  var onDeleteClick = function onDeleteClick(event) {\n    emit(props, 'delete', event);\n  };\n\n  var elRef = useRef(null);\n  useImperativeHandle(ref, function () {\n    return {\n      el: elRef.current\n    };\n  });\n  useTooltip(elRef, props);\n  var slots = getSlots(props);\n  var iconEl = useIcon(props);\n  var mediaEl;\n  var labelEl;\n  var deleteEl;\n\n  if (media || iconEl || slots && slots.media) {\n    var mediaClasses = classNames('chip-media', mediaTextColor && \"text-color-\" + mediaTextColor, mediaBgColor && \"bg-color-\" + mediaBgColor);\n    mediaEl = /*#__PURE__*/React.createElement(\"div\", {\n      className: mediaClasses\n    }, iconEl, media, slots.media);\n  }\n\n  if (text || slots && (slots.text || slots.default && slots.default.length)) {\n    labelEl = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chip-label\"\n    }, text, slots.text, slots.default);\n  }\n\n  if (deleteable) {\n    deleteEl = /*#__PURE__*/React.createElement(\"a\", {\n      className: \"chip-delete\",\n      onClick: onDeleteClick\n    });\n  }\n\n  var classes = classNames(className, 'chip', {\n    'chip-outline': outline\n  }, colorClasses(props));\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    id: id,\n    style: style,\n    className: classes,\n    ref: elRef\n  }, extraAttrs, {\n    onClick: onClick\n  }), mediaEl, labelEl, deleteEl);\n});\nChip.displayName = 'f7-chip';\nexport default Chip;"]},"metadata":{},"sourceType":"module"}