[{"/Users/gianningamy/cryptobet/front-end/refactoring/src/index.jsx":"1","/Users/gianningamy/cryptobet/front-end/refactoring/src/App.jsx":"2","/Users/gianningamy/cryptobet/front-end/refactoring/src/Pages/Profile.jsx":"3","/Users/gianningamy/cryptobet/front-end/refactoring/src/Pages/Homepage.jsx":"4","/Users/gianningamy/cryptobet/front-end/refactoring/src/Components/Navbar.jsx":"5","/Users/gianningamy/cryptobet/front-end/refactoring/src/Components/Betting.jsx":"6","/Users/gianningamy/cryptobet/front-end/refactoring/src/Components/CurrentGame.jsx":"7","/Users/gianningamy/cryptobet/front-end/refactoring/src/Components/PreviousGame.jsx":"8","/Users/gianningamy/cryptobet/front-end/refactoring/src/Components/Portfolio.jsx":"9","/Users/gianningamy/cryptobet/front-end/refactoring/src/Provider/UserProvider.jsx":"10","/Users/gianningamy/cryptobet/front-end/refactoring/src/Config/abi.js":"11","/Users/gianningamy/cryptobet/front-end/refactoring/src/Config/contract.js":"12"},{"size":295,"mtime":1649488047467,"results":"13","hashOfConfig":"14"},{"size":458,"mtime":1649489064627,"results":"15","hashOfConfig":"14"},{"size":15964,"mtime":1649489064635,"results":"16","hashOfConfig":"14"},{"size":12274,"mtime":1649489781091,"results":"17","hashOfConfig":"14"},{"size":2123,"mtime":1649489064629,"results":"18","hashOfConfig":"14"},{"size":8993,"mtime":1649489064628,"results":"19","hashOfConfig":"14"},{"size":6608,"mtime":1649489064628,"results":"20","hashOfConfig":"14"},{"size":6288,"mtime":1649489064631,"results":"21","hashOfConfig":"14"},{"size":1547,"mtime":1649489064630,"results":"22","hashOfConfig":"14"},{"size":864,"mtime":1649489064636,"results":"23","hashOfConfig":"14"},{"size":6627,"mtime":1649489064632,"results":"24","hashOfConfig":"14"},{"size":68,"mtime":1649489064633,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"15n5srz",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/gianningamy/cryptobet/front-end/refactoring/src/index.jsx",[],["56","57"],"/Users/gianningamy/cryptobet/front-end/refactoring/src/App.jsx",[],"/Users/gianningamy/cryptobet/front-end/refactoring/src/Pages/Profile.jsx",["58","59","60","61","62","63","64"],"import React, { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport Navbar from \"../Components/Navbar\"\nimport Web3 from \"web3\"\n\nconst Profile = () => {\n\tconst web3 = new Web3(window.ethereum)\n\tlet abi = [\n\t\t{ inputs: [], stateMutability: \"nonpayable\", type: \"constructor\" },\n\t\t{\n\t\t\tanonymous: false,\n\t\t\tinputs: [\n\t\t\t\t{ indexed: true, internalType: \"uint256\", name: \"_lastGame\", type: \"uint256\" },\n\t\t\t\t{ indexed: true, internalType: \"uint256\", name: \"_game\", type: \"uint256\" }\n\t\t\t],\n\t\t\tname: \"_changeCurrentGame\",\n\t\t\ttype: \"event\"\n\t\t},\n\t\t{ anonymous: false, inputs: [], name: \"_initCycle\", type: \"event\" },\n\t\t{\n\t\t\tanonymous: false,\n\t\t\tinputs: [\n\t\t\t\t{ indexed: true, internalType: \"address\", name: \"_from\", type: \"address\" },\n\t\t\t\t{ indexed: true, internalType: \"uint256\", name: \"_game\", type: \"uint256\" },\n\t\t\t\t{ indexed: false, internalType: \"uint256\", name: \"_value\", type: \"uint256\" }\n\t\t\t],\n\t\t\tname: \"_joinDown\",\n\t\t\ttype: \"event\"\n\t\t},\n\t\t{\n\t\t\tanonymous: false,\n\t\t\tinputs: [\n\t\t\t\t{ indexed: true, internalType: \"address\", name: \"_from\", type: \"address\" },\n\t\t\t\t{ indexed: true, internalType: \"uint256\", name: \"_game\", type: \"uint256\" },\n\t\t\t\t{ indexed: false, internalType: \"uint256\", name: \"_value\", type: \"uint256\" }\n\t\t\t],\n\t\t\tname: \"_joinUp\",\n\t\t\ttype: \"event\"\n\t\t},\n\t\t{\n\t\t\tanonymous: false,\n\t\t\tinputs: [\n\t\t\t\t{ indexed: true, internalType: \"address\", name: \"_from\", type: \"address\" },\n\t\t\t\t{ indexed: true, internalType: \"uint256[]\", name: \"_game\", type: \"uint256[]\" },\n\t\t\t\t{ indexed: false, internalType: \"uint256\", name: \"_value\", type: \"uint256\" }\n\t\t\t],\n\t\t\tname: \"_reward\",\n\t\t\ttype: \"event\"\n\t\t},\n\t\t{\n\t\t\tanonymous: false,\n\t\t\tinputs: [\n\t\t\t\t{ indexed: true, internalType: \"address\", name: \"_address\", type: \"address\" },\n\t\t\t\t{ indexed: false, internalType: \"uint256\", name: \"_value\", type: \"uint256\" }\n\t\t\t],\n\t\t\tname: \"_rewardAdmin\",\n\t\t\ttype: \"event\"\n\t\t},\n\t\t{\n\t\t\tanonymous: false,\n\t\t\tinputs: [{ indexed: true, internalType: \"uint256\", name: \"update\", type: \"uint256\" }],\n\t\t\tname: \"_setIntervalTime\",\n\t\t\ttype: \"event\"\n\t\t},\n\t\t{\n\t\t\tanonymous: false,\n\t\t\tinputs: [{ indexed: true, internalType: \"uint256\", name: \"_game\", type: \"uint256\" }],\n\t\t\tname: \"_updateTreasury\",\n\t\t\ttype: \"event\"\n\t\t},\n\t\t{\n\t\t\tinputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n\t\t\tname: \"Games\",\n\t\t\toutputs: [\n\t\t\t\t{ internalType: \"uint256\", name: \"upAmount\", type: \"uint256\" },\n\t\t\t\t{ internalType: \"uint256\", name: \"downAmount\", type: \"uint256\" },\n\t\t\t\t{ internalType: \"uint256\", name: \"totalAmount\", type: \"uint256\" },\n\t\t\t\t{ internalType: \"uint256\", name: \"rewardAmount\", type: \"uint256\" },\n\t\t\t\t{ internalType: \"uint256\", name: \"rewardPoolAmount\", type: \"uint256\" },\n\t\t\t\t{ internalType: \"bool\", name: \"rewardCalculated\", type: \"bool\" },\n\t\t\t\t{ internalType: \"uint256\", name: \"endTimestamp\", type: \"uint256\" },\n\t\t\t\t{ internalType: \"int256\", name: \"priceEnd\", type: \"int256\" }\n\t\t\t],\n\t\t\tstateMutability: \"view\",\n\t\t\ttype: \"function\"\n\t\t},\n\t\t{ inputs: [], name: \"NextCurrentGame\", outputs: [], stateMutability: \"nonpayable\", type: \"function\" },\n\t\t{ inputs: [], name: \"admin\", outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }], stateMutability: \"view\", type: \"function\" },\n\t\t{\n\t\t\tinputs: [],\n\t\t\tname: \"currentGameId\",\n\t\t\toutputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n\t\t\tstateMutability: \"view\",\n\t\t\ttype: \"function\"\n\t\t},\n\t\t{ inputs: [], name: \"feesAmount\", outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }], stateMutability: \"view\", type: \"function\" },\n\t\t{ inputs: [], name: \"feesRate\", outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }], stateMutability: \"view\", type: \"function\" },\n\t\t{\n\t\t\tinputs: [],\n\t\t\tname: \"getCurrentPrice\",\n\t\t\toutputs: [{ internalType: \"int256\", name: \"_price\", type: \"int256\" }],\n\t\t\tstateMutability: \"view\",\n\t\t\ttype: \"function\"\n\t\t},\n\t\t{\n\t\t\tinputs: [{ internalType: \"address\", name: \"_user\", type: \"address\" }],\n\t\t\tname: \"getUserAvailableWins\",\n\t\t\toutputs: [{ internalType: \"uint256[]\", name: \"_winGames\", type: \"uint256[]\" }],\n\t\t\tstateMutability: \"view\",\n\t\t\ttype: \"function\"\n\t\t},\n\t\t{\n\t\t\tinputs: [{ internalType: \"address\", name: \"_user\", type: \"address\" }],\n\t\t\tname: \"getUserGames\",\n\t\t\toutputs: [{ internalType: \"uint256[]\", name: \"games\", type: \"uint256[]\" }],\n\t\t\tstateMutability: \"view\",\n\t\t\ttype: \"function\"\n\t\t},\n\t\t{\n\t\t\tinputs: [{ internalType: \"address\", name: \"_user\", type: \"address\" }],\n\t\t\tname: \"getUserTotalAmount\",\n\t\t\toutputs: [{ internalType: \"uint256\", name: \"amountGames\", type: \"uint256\" }],\n\t\t\tstateMutability: \"view\",\n\t\t\ttype: \"function\"\n\t\t},\n\t\t{\n\t\t\tinputs: [{ internalType: \"address\", name: \"_user\", type: \"address\" }],\n\t\t\tname: \"getUserWinAmount\",\n\t\t\toutputs: [{ internalType: \"uint256\", name: \"_winAmount\", type: \"uint256\" }],\n\t\t\tstateMutability: \"view\",\n\t\t\ttype: \"function\"\n\t\t},\n\t\t{\n\t\t\tinputs: [{ internalType: \"address\", name: \"_user\", type: \"address\" }],\n\t\t\tname: \"getUserWins\",\n\t\t\toutputs: [{ internalType: \"uint256[]\", name: \"_winGames\", type: \"uint256[]\" }],\n\t\t\tstateMutability: \"view\",\n\t\t\ttype: \"function\"\n\t\t},\n\t\t{ inputs: [], name: \"initCycle\", outputs: [], stateMutability: \"nonpayable\", type: \"function\" },\n\t\t{\n\t\t\tinputs: [],\n\t\t\tname: \"intervalSeconds\",\n\t\t\toutputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n\t\t\tstateMutability: \"view\",\n\t\t\ttype: \"function\"\n\t\t},\n\t\t{\n\t\t\tinputs: [\n\t\t\t\t{ internalType: \"uint256\", name: \"idGame\", type: \"uint256\" },\n\t\t\t\t{ internalType: \"address\", name: \"_address\", type: \"address\" }\n\t\t\t],\n\t\t\tname: \"isWinner\",\n\t\t\toutputs: [{ internalType: \"bool\", name: \"_isWinner\", type: \"bool\" }],\n\t\t\tstateMutability: \"view\",\n\t\t\ttype: \"function\"\n\t\t},\n\t\t{ inputs: [], name: \"joinDown\", outputs: [], stateMutability: \"payable\", type: \"function\" },\n\t\t{ inputs: [], name: \"joinUp\", outputs: [], stateMutability: \"payable\", type: \"function\" },\n\t\t{\n\t\t\tinputs: [{ internalType: \"uint256[]\", name: \"idGames\", type: \"uint256[]\" }],\n\t\t\tname: \"reward\",\n\t\t\toutputs: [],\n\t\t\tstateMutability: \"nonpayable\",\n\t\t\ttype: \"function\"\n\t\t},\n\t\t{\n\t\t\tinputs: [{ internalType: \"address payable\", name: \"_address\", type: \"address\" }],\n\t\t\tname: \"rewardAdmin\",\n\t\t\toutputs: [],\n\t\t\tstateMutability: \"nonpayable\",\n\t\t\ttype: \"function\"\n\t\t},\n\t\t{\n\t\t\tinputs: [{ internalType: \"uint256\", name: \"_intervalSeconds\", type: \"uint256\" }],\n\t\t\tname: \"setIntervalSeconds\",\n\t\t\toutputs: [],\n\t\t\tstateMutability: \"nonpayable\",\n\t\t\ttype: \"function\"\n\t\t},\n\t\t{\n\t\t\tinputs: [\n\t\t\t\t{ internalType: \"address\", name: \"\", type: \"address\" },\n\t\t\t\t{ internalType: \"uint256\", name: \"\", type: \"uint256\" }\n\t\t\t],\n\t\t\tname: \"userGames\",\n\t\t\toutputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n\t\t\tstateMutability: \"view\",\n\t\t\ttype: \"function\"\n\t\t},\n\t\t{\n\t\t\tinputs: [\n\t\t\t\t{ internalType: \"uint256\", name: \"\", type: \"uint256\" },\n\t\t\t\t{ internalType: \"address\", name: \"\", type: \"address\" }\n\t\t\t],\n\t\t\tname: \"users\",\n\t\t\toutputs: [\n\t\t\t\t{ internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n\t\t\t\t{ internalType: \"uint8\", name: \"poolChoice\", type: \"uint8\" },\n\t\t\t\t{ internalType: \"bool\", name: \"claimed\", type: \"bool\" }\n\t\t\t],\n\t\t\tstateMutability: \"view\",\n\t\t\ttype: \"function\"\n\t\t}\n\t]\n\tlet contract = new web3.eth.Contract(abi, \"0xCa2d0B66cb00C9FFB7C35602c65EbefD06e291cB\")\n\tlet connected = false\n\n\tconst [userInfos, setUserInfos] = useState({\n\t\taccount: \"0xCa2d0B66cb00C9FFB7C35602c65EbefD06e291cB\",\n\t\tbalance: \"0\",\n\t\tnetwork: \"\",\n\t\tcontract: \"0xCa2d0B66cb00C9FFB7C35602c65EbefD06e291cB\"\n\t})\n\n\tconst [profileInfos, setProfileInfos] = useState({\n\t\trounds: \"Loading\",\n\t\twinRate: \"Loading\",\n\t\tnetWinnings: \"Loading\"\n\t})\n\n\tconst [selectedAccount, setSelectedAccount] = useState(\"\")\n\n\tasync function logAccount() {\n\t\tlet provider = window.ethereum\n\n\t\tif (typeof provider !== \"undefined\") {\n\t\t\tawait provider\n\t\t\t\t.request({ method: \"eth_requestAccounts\" })\n\t\t\t\t.then((accounts) => {\n\t\t\t\t\tsetSelectedAccount(accounts[0])\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tconsole.log(err)\n\t\t\t\t\treturn\n\t\t\t\t})\n\n\t\t\tawait window.ethereum.on(\"accountsChanged\", function (accounts) {\n\t\t\t\tsetSelectedAccount(accounts[0])\n\t\t\t})\n\n\t\t\tif (selectedAccount !== \"\") {\n\t\t\t\tvar rewardList = await contract.methods.getUserAvailableWins(selectedAccount).call()\n\t\t\t\tvar reward = 0\n\t\t\t\tvar game\n\t\t\t\tvar user\n\n\t\t\t\tfor (var i = 0; i < rewardList.length; i++) {\n\t\t\t\t\tif (rewardList[i] > 0) {\n\t\t\t\t\t\tawait contract.methods\n\t\t\t\t\t\t\t.Games(rewardList[i])\n\t\t\t\t\t\t\t.call()\n\t\t\t\t\t\t\t.then(function (receipt) {\n\t\t\t\t\t\t\t\tgame = receipt\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\tuser = await contract.methods.users(rewardList[i], userInfos.account).call()\n\t\t\t\t\t\treward += (await (user.amount * game.rewardAmount)) / game.rewardPoolAmount\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tsetUserInfos({\n\t\t\t\t\taccount: selectedAccount,\n\t\t\t\t\tbalance: await web3.utils.fromWei(await web3.eth.getBalance(selectedAccount), \"ether\"),\n\t\t\t\t\tnetwork: await web3.eth.net.getId(),\n\t\t\t\t\trewards: parseFloat(await web3.utils.fromWei(String(reward), \"ether\")),\n\t\t\t\t\tcontract: \"0xCa2d0B66cb00C9FFB7C35602c65EbefD06e291cB\",\n\t\t\t\t\tstatus: \"connected\"\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tasync function getData() {\n\t\tif (selectedAccount !== \"\" && userInfos.network === 137) {\n\t\t\tvar reward = 0\n\t\t\tvar cpt = (await contract.methods.getUserGames(selectedAccount).call()).length\n\t\t\tvar netWinnings\n\t\t\tvar winRate\n\n\t\t\tif ((await contract.methods.getUserWins(selectedAccount).call())[0] != 0) {\n\t\t\t\twinRate = ((await contract.methods.getUserWins(selectedAccount).call()).length / cpt) * 100\n\t\t\t\tnetWinnings =\n\t\t\t\t\t(await contract.methods.getUserWinAmount(selectedAccount).call()) - (await contract.methods.getUserTotalAmount(selectedAccount).call())\n\t\t\t} else {\n\t\t\t\twinRate = 0\n\t\t\t\tnetWinnings = 0\n\t\t\t}\n\t\t\tsetProfileInfos({\n\t\t\t\trounds: cpt,\n\t\t\t\twinRate: winRate.toFixed(1) + \" %\",\n\t\t\t\tnetWinnings: String(parseFloat(await web3.utils.fromWei(String(netWinnings), \"ether\")).toFixed(3)) + \" MATIC\"\n\t\t\t})\n\t\t} else {\n\t\t\tsetProfileInfos({\n\t\t\t\trounds: \"Loading\",\n\t\t\t\twinRate: \"Loading\",\n\t\t\t\tnetWinnings: \"Loading\"\n\t\t\t})\n\t\t}\n\t}\n\n\tasync function reward() {\n\t\tif (userInfos.network === 137)\n\t\t\tawait contract.methods.reward(await contract.methods.getUserAvailableWins(selectedAccount).call()).send({ from: selectedAccount, type: \"0x0\" })\n\t}\n\n\tasync function switchEthereumChain() {\n\t\ttry {\n\t\t\tawait window.ethereum.request({\n\t\t\t\tmethod: \"wallet_switchEthereumChain\",\n\t\t\t\tparams: [{ chainId: \"0x89\" }]\n\t\t\t})\n\t\t} catch (e) {\n\t\t\tif (e.code === 4902) {\n\t\t\t\ttry {\n\t\t\t\t\tawait window.ethereum.request({\n\t\t\t\t\t\tmethod: \"wallet_addEthereumChain\",\n\t\t\t\t\t\tparams: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tchainId: \"0x89\",\n\t\t\t\t\t\t\t\tchainName: \"Polygon Mainnet\",\n\t\t\t\t\t\t\t\tnativeCurrency: {\n\t\t\t\t\t\t\t\t\tname: \"Polygon\",\n\t\t\t\t\t\t\t\t\tsymbol: \"MATIC\",\n\t\t\t\t\t\t\t\t\tdecimals: 18\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tblockExplorerUrls: [\"https://explorer.matic.network/\"],\n\t\t\t\t\t\t\t\trpcUrls: [\"https://rpc-mainnet.maticvigil.com/\"]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t})\n\t\t\t\t} catch (addError) {\n\t\t\t\t\tconsole.error(addError)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tconst [counter, setCounter] = useState(0)\n\tconst [data, setData] = useState(0)\n\tuseEffect(() => {\n\t\tif (counter < 7) {\n\t\t\tlogAccount()\n\t\t}\n\t\tif (counter < 20)\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetCounter(counter + 1)\n\t\t\t}, 1000)\n\t}, [counter])\n\n\tuseEffect(() => {\n\t\tif (counter >= 5 && data < 3) {\n\t\t\tgetData()\n\t\t\tsetData(data + 1)\n\t\t}\n\t}, [counter])\n\n\tuseEffect(() => {\n\t\tif (window.ethereum) {\n\t\t\twindow.ethereum.on(\"chainChanged\", () => {\n\t\t\t\tif (web3.eth.net.getId() !== 137) {\n\t\t\t\t\tswitchEthereumChain()\n\t\t\t\t}\n\t\t\t\twindow.location.reload()\n\t\t\t})\n\t\t\twindow.ethereum.on(\"accountsChanged\", () => {\n\t\t\t\tif (web3.eth.net.getId() !== 137) {\n\t\t\t\t\tswitchEthereumChain()\n\t\t\t\t}\n\t\t\t\twindow.location.reload()\n\t\t\t})\n\t\t}\n\t}, [selectedAccount, profileInfos])\n\treturn (\n\t\t<Main>\n\t\t\t<Navbar userInfos={userInfos} page=\"Profile\" />\n\t\t\t{userInfos.network === 137 ? (\n\t\t\t\t<ContainerGen>\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t<StatsContainer>\n\t\t\t\t\t\t\t<Stats>\n\t\t\t\t\t\t\t\t<Key>Win Rate</Key>\n\t\t\t\t\t\t\t\t<Value>{profileInfos.winRate}</Value>\n\t\t\t\t\t\t\t</Stats>\n\t\t\t\t\t\t\t<Stats>\n\t\t\t\t\t\t\t\t<Key>Rounds</Key>\n\t\t\t\t\t\t\t\t<Value>{profileInfos.rounds}</Value>\n\t\t\t\t\t\t\t</Stats>\n\t\t\t\t\t\t</StatsContainer>\n\t\t\t\t\t\t<Stats style={{ \"margin-top\": \"20%\" }}>\n\t\t\t\t\t\t\t<Key>Net Winnings</Key>\n\t\t\t\t\t\t\t<Value style={{ color: \"#191b1f\" }}>{profileInfos.netWinnings}</Value>\n\t\t\t\t\t\t</Stats>\n\t\t\t\t\t</Container>\n\t\t\t\t</ContainerGen>\n\t\t\t) : (\n\t\t\t\t<ContainerGen style={{ \"margin-top\": \"15%\", \"flex-direction\": \"column\" }}>\n\t\t\t\t\t<RewardText>Make sure Metamask is installed and connected to Polygon's network.</RewardText>\n\t\t\t\t\t<RewardText>Click below to switch networks.</RewardText>\n\t\t\t\t\t<RewardButton style={{ width: \"20%\" }} onClick={() => switchEthereumChain()}>\n\t\t\t\t\t\tSwitch network\n\t\t\t\t\t</RewardButton>\n\t\t\t\t</ContainerGen>\n\t\t\t)}\n\t\t\t{userInfos.network === 137 ? (\n\t\t\t\t<Reward>\n\t\t\t\t\t<RewardText>{userInfos.rewards > 0 ? userInfos.rewards : 0} MATIC</RewardText>\n\t\t\t\t\t<RewardButton onClick={() => reward()}>Collect rewards</RewardButton>\n\t\t\t\t</Reward>\n\t\t\t) : (\n\t\t\t\t\"\"\n\t\t\t)}\n\t\t</Main>\n\t)\n}\n\nconst Main = styled.main`\n\theight: 100vh;\n\twidth: 100vw;\n\ttransform: unset;\n\tbackground: radial-gradient(150.6% 98.22% at 48.06% 0%, rgba(130, 71, 229, 0.6) 0%, rgba(200, 168, 255, 0) 100%), rgb(31, 33, 40);\n\tbackground-image: radial-gradient(150.6% 98.22% at 48.06% 0%, rgba(130, 71, 229, 0.6) 0%, rgba(200, 168, 255, 0) 100%), initial;\n\tbackground-position-x: initial, initial;\n\tbackground-position-y: initial, initial;\n\tbackground-size: initial, initial;\n\tbackground-repeat-x: initial, initial;\n\tbackground-repeat-y: initial, initial;\n\tbackground-attachment: initial, initial;\n\tbackground-origin: initial, initial;\n\tbackground-clip: initial, initial;\n\tbackground-color: rgb(31, 33, 40);\n\tbackground-blend-mode: overlay, normal;\n`\n\nconst ContainerGen = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: center;\n\talign-items: center;\n\tgap: 5%;\n`\n\nconst Container = styled.div`\n\tbackground-image: linear-gradient(90deg, rgb(206, 162, 206) 0%, rgb(149, 177, 254) 100%);\n\tcolor: rgb(84, 36, 50);\n\tmargin-top: 5rem;\n\twidth: 400px;\n\theight: 350px;\n\tborder-radius: 1rem;\n\tdisplay: flex;\n\tflex-direction: column;\n\tfont-family: Inter, sans-serif;\n\tflex-direction: column;\n`\nconst StatsContainer = styled.div`\n\tbackground-color: #191b1f;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\tborder-radius: 0.5rem;\n`\nconst Stats = styled.div`\n\tpadding: 0.7rem;\n\tborder-radius: 0.5rem;\n\tdisplay: flex;\n\twidth: 100%;\n`\nconst Key = styled.div`\n\tbackground-color: rgb(33, 36, 41);\n\tborder: 1px solid rgb(33, 36, 41);\n\tpadding: 0.5rem;\n\tborder-radius: 0.5rem;\n\twidth: 100%;\n\ttext-align: center;\n\tcolor: rgb(149, 177, 254);\n`\n\nconst Value = styled.div`\n\tcolor: rgb(149, 177, 254);\n\tborder: 1px solid rgb(33, 36, 41);\n\tpadding: 0.5rem;\n\tborder-radius: 0.5rem;\n\twidth: 60%;\n\ttext-align: center;\n`\n\nconst Reward = styled.div`\n\tmargin-left: 40%;\n\tmargin-top: 11%;\n\tgrid-area: reward;\n\tbackground-color: #191b1f;\n\tborder: 1px solid #191b1f;\n\tpadding: 0.5rem;\n\tborder-radius: 0.5rem;\n\tdisplay: flex;\n\tflex-direction: column;\n\twidth: 20%;\n\talign-items: center;\n`\n\nconst RewardText = styled.div`\n\tcolor: rgb(149, 177, 254);\n\tpadding: 0.5rem;\n\tborder-radius: 0.5rem;\n\tjustify-content: center;\n\talign-items: center;\n\tfont-family: Inter, sans-serif;\n`\n\nconst RewardButton = styled.button`\n\tfont-size: 100%;\n\tcolor: rgb(84, 36, 50);\n\tfont-family: \"Inter custom\", sans-serif;\n\tbackground-image: linear-gradient(90deg, rgb(206, 162, 206) 0%, rgb(149, 177, 254) 100%);\n\tpadding: 16px;\n\twidth: 100%;\n\tfont-weight: 500;\n\ttext-align: center;\n\tborder-radius: 20px;\n\toutline: none;\n\tborder: 1px solid #191b1f;\n\ttext-decoration: none;\n\tdisplay: flex;\n\tjustify-content: center;\n\tflex-wrap: nowrap;\n\talign-items: center;\n\tcursor: pointer;\n\tposition: relative;\n\tz-index: 1;\n\t&:disabled {\n\t\tcursor: auto;\n\t\tpointer-events: none;\n\t}\n\n\twill-change: transform;\n\ttransition: transform 450ms ease;\n\ttransform: perspective(1px) translateZ(0);\n\n\t> * {\n\t\tuser-select: none;\n\t}\n\n\t> a {\n\t\ttext-decoration: none;\n\t}\n\ttransition: cubic-bezier(0.165, 0.84, 0.44, 1) 0.3s;\n\t&:hover {\n\t\tbackground-image: linear-gradient(90deg, rgb(255, 150, 165) 0%, rgb(255, 185, 140) 100%);\n\t}\n`\n\nexport default Profile\n","/Users/gianningamy/cryptobet/front-end/refactoring/src/Pages/Homepage.jsx",["65","66","67","68"],"/Users/gianningamy/cryptobet/front-end/refactoring/src/Components/Navbar.jsx",[],"/Users/gianningamy/cryptobet/front-end/refactoring/src/Components/Betting.jsx",["69"],"import React, { useState, useEffect, useContext } from \"react\"\nimport styled from \"styled-components\"\nimport Web3 from \"web3\"\nimport { abi } from \"../Config/abi\"\nimport { UserContext } from \"../Provider/UserProvider\"\nimport Popup from \"reactjs-popup\"\nimport \"reactjs-popup/dist/index.css\"\nimport { ADDRESS } from \"../Config/contract\"\n\nconst Betting = ({ idCurrentGame }) => {\n\tconst inputAmount = React.createRef()\n\tconst web3 = new Web3(window.ethereum)\n\tconst { user: userInfos } = useContext(UserContext)\n\n\tconst contract = new web3.eth.Contract(abi, ADDRESS)\n\n\tconst [gameInfos, setGameInfos] = useState({\n\t\tPool1Amount: 0,\n\t\tPool0Amount: 0,\n\t\tPool1Payout: 0,\n\t\tPool0Payout: 0,\n\t\tpriceStart: 0,\n\t\tCurrentPrice: 0,\n\t\tCurrentGameId: \"\",\n\t\tplayerState: \"\",\n\t\tpreviousTime: 0,\n\t\tmin: 0,\n\t\tTimeLeft: 0\n\t})\n\n\tconst betUp = async () => {\n\t\tawait window.ethereum.enable()\n\n\t\tif (Boolean(inputAmount.current.value.match(\"^[0-9]*[.,]?[0-9]*$\"))) {\n\t\t\tconst betAmount = inputAmount.current.value.replace(\",\", \".\")\n\t\t\tawait contract.methods.joinUp().send({ from: userInfos.account, value: web3.utils.toWei(betAmount, \"ether\"), type: \"0x0\" })\n\t\t}\n\t}\n\n\tconst betDown = async () => {\n\t\tawait window.ethereum.enable()\n\n\t\tif (Boolean(inputAmount.current.value.match(\"^[0-9]*[.,]?[0-9]*$\"))) {\n\t\t\tconst betAmount = inputAmount.current.value.replace(\",\", \".\")\n\t\t\tawait contract.methods.joinDown().send({ from: userInfos.account, value: web3.utils.toWei(betAmount, \"ether\"), type: \"0x0\" })\n\t\t}\n\t}\n\n\tconst getGameInfos = async (idGame) => {\n\t\t//await window.ethereum.enable();\n\t\tlet game\n\t\t// let statusGame\n\t\tlet currentPrice\n\t\tlet currentGameId = idGame\n\n\t\tawait contract.methods\n\t\t\t.Games(currentGameId)\n\t\t\t.call()\n\t\t\t.then((receipt) => {\n\t\t\t\tgame = receipt\n\t\t\t})\n\n\t\tawait contract.methods\n\t\t\t.getCurrentPrice()\n\t\t\t.call()\n\t\t\t.then((receipt) => {\n\t\t\t\tcurrentPrice = receipt / 10 ** 8\n\t\t\t})\n\n\t\tlet priceStart = 0\n\t\tlet previousTime = 0\n\t\tif (currentGameId !== 0) {\n\t\t\tawait contract.methods\n\t\t\t\t.Games(parseInt(currentGameId) - 1)\n\t\t\t\t.call()\n\t\t\t\t.then((receipt) => {\n\t\t\t\t\tpriceStart = receipt.priceEnd / 10 ** 8\n\t\t\t\t\tpreviousTime = receipt.endTimestamp\n\t\t\t\t})\n\t\t}\n\n\t\tlet min = String((previousTime - Math.floor(Date.now() / 1000)) % 60)\n\t\tif (min < 10) {\n\t\t\tmin = \"0\" + min\n\t\t}\n\n\t\tlet userAmount = await contract.methods.users(currentGameId, userInfos.account).call()\n\n\t\tlet playerState = parseInt(userAmount.amount)\n\t\tif (playerState > 0) {\n\t\t\tif (userAmount.poolChoice === 0) playerState = \"DOWN : \" + web3.utils.fromWei(userAmount.amount, \"ether\")\n\t\t\telse playerState = \"UP : \" + web3.utils.fromWei(userAmount.amount, \"ether\") + \" MATIC\"\n\t\t} else {\n\t\t\tif (Math.floor((previousTime - Math.floor(Date.now() / 1000)) / 60) < 0) {\n\t\t\t\tplayerState = \"OUT\"\n\t\t\t} else {\n\t\t\t\tplayerState = \"Click on Up/Down button to enter the game\"\n\t\t\t}\n\t\t}\n\n\t\tsetGameInfos({\n\t\t\tPool1Amount: web3.utils.fromWei(game.upAmount, \"ether\"),\n\t\t\tPool0Amount: web3.utils.fromWei(game.downAmount, \"ether\"),\n\t\t\tPool1Payout:\n\t\t\t\tparseFloat(game.upAmount) > 0 ? ((parseFloat(game.upAmount) + parseFloat(game.downAmount)) / parseFloat(game.upAmount)).toFixed(2) : \"1.00\",\n\t\t\tPool0Payout:\n\t\t\t\tparseFloat(game.downAmount) > 0\n\t\t\t\t\t? ((parseFloat(game.upAmount) + parseFloat(game.downAmount)) / parseFloat(game.downAmount)).toFixed(2)\n\t\t\t\t\t: \"1.00\",\n\t\t\tpriceStart: priceStart.toFixed(3),\n\t\t\tCurrentPrice: currentPrice.toFixed(3),\n\t\t\tCurrentGameId: currentGameId,\n\t\t\tplayerState: playerState,\n\t\t\tpreviousTime: previousTime,\n\t\t\tmin: min,\n\t\t\tTimeLeft:\n\t\t\t\tMath.floor((previousTime - Math.floor(Date.now() / 1000)) / 60) >= 0\n\t\t\t\t\t? \"Time left : \" + String(Math.floor((previousTime - Math.floor(Date.now() / 1000)) / 60)) + \" : \" + min\n\t\t\t\t\t: \"Locked\"\n\t\t})\n\t}\n\n\tuseEffect(() => {\n\t\tgetGameInfos(idCurrentGame)\n\t}, [])\n\n\treturn (\n\t\t<Container>\n\t\t\t<StatusContainer>\n\t\t\t\t<State>Next</State>\n\t\t\t\t<Time>{gameInfos.TimeLeft}</Time>\n\t\t\t\t<Id> #{gameInfos.CurrentGameId}</Id>\n\t\t\t</StatusContainer>\n\t\t\t<Popup trigger={<UpButton onClick={() => betUp()}>UP x{gameInfos.Pool1Payout} Payout</UpButton>}>\n\t\t\t\t<StatsContainer>\n\t\t\t\t\t<Stats>\n\t\t\t\t\t\t<InputAmount\n\t\t\t\t\t\t\tref={inputAmount}\n\t\t\t\t\t\t\tonKeyPress={(event) => {\n\t\t\t\t\t\t\t\tif (!/^[0-9]*[.,]?[0-9]*$/.test(event.key)) {\n\t\t\t\t\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tinputmode=\"decimal\"\n\t\t\t\t\t\t\tautocomplete=\"off\"\n\t\t\t\t\t\t\tautocorrect=\"off\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tpattern=\"^[0-9]*[.,]?[0-9]*$\"\n\t\t\t\t\t\t\tplaceholder=\"0.0\"\n\t\t\t\t\t\t\tminlength=\"1\"\n\t\t\t\t\t\t\tmaxlength=\"79\"\n\t\t\t\t\t\t\tspellcheck=\"false\"\n\t\t\t\t\t\t\tstyle={{ width: \"100%\" }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Stats>\n\t\t\t\t\t<UpButton onClick={() => betUp()}>Join UP</UpButton>\n\t\t\t\t</StatsContainer>\n\t\t\t</Popup>\n\t\t\t<StatsContainer>\n\t\t\t\t<Stats>\n\t\t\t\t\t<Key style={{ color: \"rgb(39, 255, 96)\" }}>Up pool</Key>\n\t\t\t\t\t<Value>{parseFloat(gameInfos.Pool1Amount) > 0 ? parseFloat(gameInfos.Pool1Amount).toFixed(2) : 0} MATIC</Value>\n\t\t\t\t</Stats>\n\t\t\t\t<Stats>\n\t\t\t\t\t<Key>Prize pool</Key>\n\t\t\t\t\t<Value>\n\t\t\t\t\t\t{parseFloat(gameInfos.Pool0Amount) + parseFloat(gameInfos.Pool1Amount) > 0\n\t\t\t\t\t\t\t? (parseFloat(gameInfos.Pool0Amount) + parseFloat(gameInfos.Pool1Amount)).toFixed(2)\n\t\t\t\t\t\t\t: 0}{\" \"}\n\t\t\t\t\t\tMATIC\n\t\t\t\t\t</Value>\n\t\t\t\t</Stats>\n\t\t\t\t<Stats>\n\t\t\t\t\t<Key style={{ color: \"rgb(255, 67, 67)\" }}>Down pool</Key>\n\t\t\t\t\t<Value>{parseFloat(gameInfos.Pool0Amount) > 0 ? parseFloat(gameInfos.Pool0Amount).toFixed(2) : 0} MATIC</Value>\n\t\t\t\t</Stats>\n\t\t\t</StatsContainer>\n\t\t\t<Popup trigger={<DownButton onClick={() => betDown()}>DOWN x{gameInfos.Pool0Payout} Payout</DownButton>}>\n\t\t\t\t<StatsContainer>\n\t\t\t\t\t<Stats>\n\t\t\t\t\t\t<InputAmount\n\t\t\t\t\t\t\tref={inputAmount}\n\t\t\t\t\t\t\tonKeyPress={(event) => {\n\t\t\t\t\t\t\t\tif (!/^[0-9]*[.,]?[0-9]*$/.test(event.key)) {\n\t\t\t\t\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tinputmode=\"decimal\"\n\t\t\t\t\t\t\tautocomplete=\"off\"\n\t\t\t\t\t\t\tautocorrect=\"off\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tpattern=\"^[0-9]*[.,]?[0-9]*$\"\n\t\t\t\t\t\t\tplaceholder=\"0.0\"\n\t\t\t\t\t\t\tminlength=\"1\"\n\t\t\t\t\t\t\tmaxlength=\"79\"\n\t\t\t\t\t\t\tspellcheck=\"false\"\n\t\t\t\t\t\t\tstyle={{ width: \"100%\" }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Stats>\n\t\t\t\t\t<DownButton onClick={() => betDown()}>Join Down</DownButton>\n\t\t\t\t</StatsContainer>\n\t\t\t</Popup>\n\t\t\t<OutputContainer>\n\t\t\t\t<Output>{gameInfos.playerState}</Output>\n\t\t\t</OutputContainer>\n\t\t</Container>\n\t)\n}\n\nconst Container = styled.div`\n\tbackground-image: linear-gradient(90deg, rgb(206, 162, 206) 0%, rgb(149, 177, 254) 100%);\n\tborder: 3px solid rgb(149, 177, 254);\n\tcolor: rgb(84, 36, 50);\n\tmargin-top: 5rem;\n\twidth: 400px;\n\theight: 350px;\n\tborder-radius: 1rem;\n\tdisplay: flex;\n\tflex-direction: column;\n\tfont-family: Inter, sans-serif;\n\tflex-direction: column;\n`\n\nconst StatusContainer = styled.div`\n\tbackground-color: #191b1f;\n\tborder: #191b1f;\n\tpadding: 0.5rem;\n\tborder-radius: 0.5rem;\n\tdisplay: flex;\n\twidth: 100%;\n\theight: 100%;\n`\n\nconst State = styled.div`\n\twidth: 33%;\n\ttext-align: center;\n\tcolor: rgb(39, 255, 96);\n`\n\nconst Time = styled.div`\n\twidth: 33%;\n\ttext-align: center;\n\tcolor: rgb(149, 177, 254);\n`\n\nconst Id = styled.div`\n\twidth: 33%;\n\ttext-align: center;\n\tcolor: rgb(149, 177, 254);\n`\n\nconst UpButton = styled.button`\n\tfont-size: 100%;\n\theight: 50%;\n\tpadding: 0.5rem;\n\tborder-radius: 0.5rem;\n\twidth: 100%;\n\tborder: 3px solid rgb(39, 255, 96);\n\tbackground: rgb(149, 177, 254);\n\tcolor: rgb(39, 255, 96);\n\ttext-align: center;\n\tcursor: pointer;\n\ttransition: cubic-bezier(0.165, 0.84, 0.44, 1) 0.3s;\n\t&:hover {\n\t\tbackground-color: rgb(39, 220, 96);\n\t\tcolor: white;\n\t}\n`\n\nconst DownButton = styled.button`\n\tfont-size: 100%;\n\theight: 50%;\n\tpadding: 0.5rem;\n\tborder-radius: 0.5rem;\n\twidth: 100%;\n\tborder: 3px solid rgb(255, 67, 67);\n\tbackground: rgb(206, 162, 206);\n\tcolor: rgb(255, 67, 67);\n\ttext-align: center;\n\tcursor: pointer;\n\ttransition: cubic-bezier(0.165, 0.84, 0.44, 1) 0.3s;\n\t&:hover {\n\t\tbackground-color: rgb(255, 67, 67);\n\t\tcolor: white;\n\t}\n`\n\nconst InputAmount = styled.input`\n\tbackground-color: rgb(33, 36, 41);\n\tborder: 1px solid rgb(33, 36, 41);\n\tpadding: 0.5rem;\n\tborder-radius: 0.5rem;\n\twidth: 100%;\n\ttext-align: center;\n\tcolor: rgb(149, 177, 254);\n`\n\nconst StatsContainer = styled.div`\n\tbackground-color: #191b1f;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\tborder-radius: 0.5rem;\n`\n\nconst Stats = styled.div`\n\tpadding: 0.7rem;\n\tborder-radius: 0.5rem;\n\tdisplay: flex;\n\twidth: 100%;\n`\n\nconst Key = styled.div`\n\tbackground-color: rgb(33, 36, 41);\n\tborder: 1px solid rgb(33, 36, 41);\n\tpadding: 0.5rem;\n\tborder-radius: 0.5rem;\n\twidth: 100%;\n\ttext-align: center;\n\tcolor: rgb(149, 177, 254);\n`\n\nconst Value = styled.div`\n\tcolor: rgb(149, 177, 254);\n\tborder: 1px solid rgb(33, 36, 41);\n\tpadding: 0.5rem;\n\tborder-radius: 0.5rem;\n\twidth: 60%;\n\ttext-align: center;\n`\n\nconst OutputContainer = styled.div`\n\tbackground-image: linear-gradient(90deg, rgb(206, 162, 206) 0%, rgb(149, 177, 254) 100%);\n\tborder: 1px solid linear-gradient(90deg, rgb(206, 162, 206) 0%, rgb(149, 177, 254) 100%);\n\tpadding: 0.5rem;\n\tborder-radius: 0.5rem;\n\twidth: 100%;\n\theight: 10%;\n\tjustify-content: center;\n`\n\nconst Output = styled.p`\n\ttext-align: center;\n`\n\nexport default Betting\n","/Users/gianningamy/cryptobet/front-end/refactoring/src/Components/CurrentGame.jsx",["70","71","72","73","74","75"],"import React, { useState, useEffect, useContext } from \"react\"\nimport { abi } from \"../Config/abi\"\nimport { UserContext } from \"../Provider/UserProvider\"\nimport styled from \"styled-components\"\nimport Web3 from \"web3\"\nimport { ADDRESS } from \"../Config/contract\"\n\nconst CurrentGame = ({ idCurrentGame }) => {\n\tconst web3 = new Web3(window.ethereum)\n\tconst { user: userInfos, userLoading, setUser } = useContext(UserContext)\n\tlet contract = new web3.eth.Contract(abi, ADDRESS)\n\n\tconst [gameInfos, setGameInfos] = useState(\"\")\n\n\tasync function getGameInfos(idGame) {\n\t\tvar game\n\t\t// var statusGame\n\t\tvar currentPrice\n\t\tvar currentGameId = idGame\n\n\t\tawait contract.methods\n\t\t\t.Games(currentGameId)\n\t\t\t.call()\n\t\t\t.then(function (receipt) {\n\t\t\t\tgame = receipt\n\t\t\t})\n\n\t\tawait contract.methods\n\t\t\t.getCurrentPrice()\n\t\t\t.call()\n\t\t\t.then(function (receipt) {\n\t\t\t\tcurrentPrice = receipt / 10 ** 8\n\t\t\t})\n\n\t\tvar min = String((game.endTimestamp - Math.floor(Date.now() / 1000)) % 60)\n\t\tif (min < 10) min = \"0\" + min\n\n\t\tvar priceStart = 0\n\t\tif (currentGameId !== 0) {\n\t\t\tawait contract.methods\n\t\t\t\t.Games(parseInt(currentGameId) - 1)\n\t\t\t\t.call()\n\t\t\t\t.then(function (receipt) {\n\t\t\t\t\tpriceStart = receipt.priceEnd / 10 ** 8\n\t\t\t\t})\n\t\t}\n\n\t\tvar state = (currentPrice - priceStart).toFixed(3)\n\t\tif (state > 0) {\n\t\t\tstate = \"UP\"\n\t\t} else {\n\t\t\tif (state < 0) {\n\t\t\t\tstate = \"DOWN\"\n\t\t\t} else {\n\t\t\t\tstate = \"---\"\n\t\t\t}\n\t\t}\n\n\t\tvar user = await contract.methods.users(currentGameId, userInfos.account).call()\n\t\tvar poolChoice = user.poolChoice\n\t\tif (poolChoice == 1) poolChoice = \"UP\"\n\t\telse poolChoice = \"DOWN\"\n\n\t\tsetGameInfos({\n\t\t\tPool1Amount: await web3.utils.fromWei(game.upAmount, \"ether\"),\n\t\t\tPool0Amount: await web3.utils.fromWei(game.downAmount, \"ether\"),\n\t\t\tPool1Payout:\n\t\t\t\tparseFloat(game.upAmount) > 0 ? ((parseFloat(game.upAmount) + parseFloat(game.downAmount)) / parseFloat(game.upAmount)).toFixed(2) : \"1.00\",\n\t\t\tPool0Payout:\n\t\t\t\tparseFloat(game.downAmount) > 0\n\t\t\t\t\t? ((parseFloat(game.upAmount) + parseFloat(game.downAmount)) / parseFloat(game.downAmount)).toFixed(2)\n\t\t\t\t\t: \"1.00\",\n\t\t\tpriceStart: priceStart.toFixed(3),\n\t\t\tCurrentPrice: currentPrice.toFixed(3),\n\t\t\tCurrentGameId: currentGameId,\n\t\t\tplayerState: parseInt(user.amount) > 0 ? poolChoice + \" : \" + (await web3.utils.fromWei(user.amount, \"ether\")) + \" MATIC\" : \"OUT\",\n\t\t\tState: state,\n\t\t\tpreviousTime: game.endTimestamp,\n\t\t\tmin: min,\n\t\t\tTimeLeft:\n\t\t\t\tMath.floor((game.endTimestamp - Math.floor(Date.now() / 1000)) / 60) >= 0\n\t\t\t\t\t? \"Time left : \" + String(Math.floor((game.endTimestamp - Math.floor(Date.now() / 1000)) / 60)) + \" : \" + min\n\t\t\t\t\t: \"Calculating\"\n\t\t})\n\t}\n\tconst [counter, setCounter] = useState(0)\n\tuseEffect(() => {\n\t\tgetGameInfos(idCurrentGame)\n\t}, [])\n\treturn (\n\t\t<Container style={gameInfos.State === \"UP\" ? { border: \"3px solid rgb(39, 255, 96)\" } : { border: \"3px solid rgb(255, 67, 67)\" }}>\n\t\t\t<StatusContainer>\n\t\t\t\t<State>Live</State>\n\t\t\t\t<Time>{gameInfos.TimeLeft}</Time>\n\t\t\t\t<Id>#{gameInfos.CurrentGameId}</Id>\n\t\t\t</StatusContainer>\n\t\t\t<Up\n\t\t\t\tstyle={\n\t\t\t\t\tgameInfos.State === \"UP\"\n\t\t\t\t\t\t? {}\n\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\tbackground: \"linear-gradient(90deg, rgb(206, 162, 206) 0%, rgb(149, 177, 254) 100%)\",\n\t\t\t\t\t\t\t\tcolor: \"rgb(84, 36, 50)\",\n\t\t\t\t\t\t\t\tborder: \"3px solid rgb(84, 36, 50)\"\n\t\t\t\t\t\t  }\n\t\t\t\t}>\n\t\t\t\tUP x{gameInfos.Pool1Payout} Payout\n\t\t\t</Up>\n\t\t\t<StatsContainer>\n\t\t\t\t<Stats>\n\t\t\t\t\t<Key>Current ETH price</Key>\n\t\t\t\t\t<Value style={gameInfos.State === \"UP\" ? { border: \"3px solid rgb(39, 255, 96)\" } : { border: \"3px solid rgb(255, 67, 67)\" }}>\n\t\t\t\t\t\t{gameInfos.CurrentPrice} $\n\t\t\t\t\t</Value>\n\t\t\t\t</Stats>\n\t\t\t\t<Stats>\n\t\t\t\t\t<Key>Locked ETH price</Key>\n\t\t\t\t\t<Value>{gameInfos.priceStart} $</Value>\n\t\t\t\t</Stats>\n\t\t\t\t<Stats>\n\t\t\t\t\t<Key>Prize pool</Key>\n\t\t\t\t\t<Value>\n\t\t\t\t\t\t{parseFloat(gameInfos.Pool0Amount) + parseFloat(gameInfos.Pool1Amount) > 0\n\t\t\t\t\t\t\t? (parseFloat(gameInfos.Pool0Amount) + parseFloat(gameInfos.Pool1Amount)).toFixed(2)\n\t\t\t\t\t\t\t: 0}{\" \"}\n\t\t\t\t\t\tMATIC\n\t\t\t\t\t</Value>\n\t\t\t\t</Stats>\n\t\t\t</StatsContainer>\n\t\t\t<Down\n\t\t\t\tstyle={\n\t\t\t\t\tgameInfos.State === \"DOWN\"\n\t\t\t\t\t\t? {}\n\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\tbackground: \"linear-gradient(90deg, rgb(206, 162, 206) 0%, rgb(149, 177, 254) 100%)\",\n\t\t\t\t\t\t\t\tcolor: \"rgb(84, 36, 50)\",\n\t\t\t\t\t\t\t\tborder: \"3px solid rgb(84, 36, 50)\"\n\t\t\t\t\t\t  }\n\t\t\t\t}>\n\t\t\t\tDOWN x{gameInfos.Pool0Payout} Payout\n\t\t\t</Down>\n\t\t\t<OutputContainer>\n\t\t\t\t<Output>{gameInfos.playerState}</Output>\n\t\t\t</OutputContainer>\n\t\t</Container>\n\t)\n}\n\nconst Container = styled.div`\n\tbackground-image: linear-gradient(90deg, rgb(206, 162, 206) 0%, rgb(149, 177, 254) 100%);\n\tcolor: rgb(84, 36, 50);\n\tmargin-top: 5rem;\n\twidth: 400px;\n\theight: 350px;\n\tborder-radius: 1rem;\n\tdisplay: flex;\n\tflex-direction: column;\n\tfont-family: Inter, sans-serif;\n\tflex-direction: column;\n`\n\nconst StatusContainer = styled.div`\n\tbackground-color: #191b1f;\n\tborder: #191b1f;\n\tpadding: 0.5rem;\n\tborder-radius: 0.5rem;\n\tdisplay: flex;\n\twidth: 100%;\n\theight: 100%;\n`\n\nconst State = styled.div`\n\twidth: 33%;\n\ttext-align: center;\n\tcolor: rgb(149, 177, 254);\n`\n\nconst Time = styled.div`\n\twidth: 33%;\n\ttext-align: center;\n\tcolor: rgb(149, 177, 254);\n`\n\nconst Id = styled.div`\n\twidth: 33%;\n\ttext-align: center;\n\tcolor: rgb(149, 177, 254);\n`\n\nconst Up = styled.div`\n\tpadding: 0.5rem;\n\tborder-radius: 0.5rem;\n\twidth: 100%;\n\tborder: 3px solid rgb(39, 255, 96);\n\tbackground: rgb(149, 177, 254);\n\tcolor: rgb(39, 255, 96);\n\ttext-align: center;\n`\n\nconst Down = styled.div`\n\tpadding: 0.5rem;\n\tborder-radius: 0.5rem;\n\twidth: 100%;\n\tborder: 3px solid rgb(255, 67, 67);\n\tbackground: rgb(206, 162, 206);\n\tcolor: rgb(255, 67, 67);\n\ttext-align: center;\n`\n\nconst StatsContainer = styled.div`\n\tbackground-color: #191b1f;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\tborder-radius: 0.5rem;\n`\n\nconst Stats = styled.div`\n\tpadding: 0.7rem;\n\tborder-radius: 0.5rem;\n\tdisplay: flex;\n\twidth: 100%;\n`\n\nconst Key = styled.div`\n\tbackground-color: rgb(33, 36, 41);\n\tborder: 1px solid rgb(33, 36, 41);\n\tpadding: 0.5rem;\n\tborder-radius: 0.5rem;\n\twidth: 100%;\n\ttext-align: center;\n\tcolor: rgb(149, 177, 254);\n`\n\nconst Value = styled.div`\n\tcolor: rgb(149, 177, 254);\n\tborder: 1px solid rgb(33, 36, 41);\n\tpadding: 0.5rem;\n\tborder-radius: 0.5rem;\n\twidth: 60%;\n\ttext-align: center;\n`\n\nconst OutputContainer = styled.div`\n\tbackground-image: linear-gradient(90deg, rgb(206, 162, 206) 0%, rgb(149, 177, 254) 100%);\n\tborder: 1px solid linear-gradient(90deg, rgb(206, 162, 206) 0%, rgb(149, 177, 254) 100%);\n\tpadding: 0.5rem;\n\tborder-radius: 0.5rem;\n\twidth: 100%;\n\theight: 10%;\n\tjustify-content: center;\n`\n\nconst Output = styled.p`\n\ttext-align: center;\n`\n\nexport default CurrentGame\n","/Users/gianningamy/cryptobet/front-end/refactoring/src/Components/PreviousGame.jsx",["76"],"import React, { useState, useEffect, useContext } from \"react\"\nimport styled from \"styled-components\"\nimport Web3 from \"web3\"\nimport { abi } from \"../Config/abi\"\nimport { ADDRESS } from \"../Config/contract\"\nimport { UserContext } from \"../Provider/UserProvider\"\n\nconst PreviousGame = ({ idCurrentGame }) => {\n\tconst web3 = new Web3(window.ethereum)\n\tlet contract = new web3.eth.Contract(abi, ADDRESS)\n\tconst { user: userInfos } = useContext(UserContext)\n\n\tconst [gameInfos, setGameInfos] = useState({ CurrentGameId: 0 })\n\n\tconst getGameInfos = async (idGame) => {\n\t\tlet game\n\t\tlet statusGame\n\t\tlet currentPrice\n\t\tlet currentGameId = idGame\n\n\t\tawait contract.methods\n\t\t\t.Games(currentGameId)\n\t\t\t.call()\n\t\t\t.then(function (receipt) {\n\t\t\t\tgame = receipt\n\t\t\t})\n\n\t\tawait contract.methods\n\t\t\t.getCurrentPrice()\n\t\t\t.call()\n\t\t\t.then(function (receipt) {\n\t\t\t\tcurrentPrice = receipt / 10 ** 8\n\t\t\t})\n\n\t\tlet min = String((game.endTimestamp - Math.floor(Date.now() / 1000)) % 60)\n\t\tif (min < 10) {\n\t\t\tmin = \"0\" + min\n\t\t}\n\n\t\tlet priceStart = 0\n\t\tif (currentGameId !== 0) {\n\t\t\tawait contract.methods\n\t\t\t\t.Games(parseInt(currentGameId) - 1)\n\t\t\t\t.call()\n\t\t\t\t.then(function (receipt) {\n\t\t\t\t\tpriceStart = receipt.priceEnd / 10 ** 8\n\t\t\t\t})\n\t\t}\n\n\t\tlet userGame = await contract.methods.users(currentGameId, userInfos.account).call()\n\t\tlet poolChoice = userGame.poolChoice\n\t\tif (poolChoice === 1) poolChoice = \"UP\"\n\t\telse poolChoice = \"DOWN\"\n\n\t\tstatusGame = \"Closed\"\n\t\tsetGameInfos({\n\t\t\tPool1Amount: web3.utils.fromWei(game.upAmount, \"ether\"),\n\t\t\tPool0Amount: web3.utils.fromWei(game.downAmount, \"ether\"),\n\t\t\tPool1Payout:\n\t\t\t\tparseFloat(game.upAmount) > 0 ? ((parseFloat(game.upAmount) + parseFloat(game.downAmount)) / parseFloat(game.upAmount)).toFixed(2) : \"1.00\",\n\t\t\tPool0Payout:\n\t\t\t\tparseFloat(game.downAmount) > 0\n\t\t\t\t\t? ((parseFloat(game.upAmount) + parseFloat(game.downAmount)) / parseFloat(game.downAmount)).toFixed(2)\n\t\t\t\t\t: \"1.00\",\n\t\t\tstatus: statusGame,\n\t\t\tPriceStart: priceStart.toFixed(3),\n\t\t\tPriceEnd: (game.priceEnd / 10 ** 8).toFixed(3),\n\t\t\tCurrentPrice: currentPrice.toFixed(3),\n\t\t\tCurrentGameId: currentGameId,\n\t\t\tplayerState: parseInt(userGame.amount) > 0 ? poolChoice + \" : \" + web3.utils.fromWei(userGame.amount, \"ether\") + \" MATIC\" : \"OUT\",\n\t\t\tTimeLeft: String(Math.floor((game.endTimestamp - Math.floor(Date.now() / 1000)) / 60)) + \" : \" + min,\n\t\t\twinner: game.priceEnd / 10 ** 8 > priceStart ? \"UP\" : \"DOWN\"\n\t\t})\n\t}\n\tuseEffect(() => {\n\t\tgetGameInfos(idCurrentGame)\n\t}, [])\n\treturn (\n\t\t<Container style={gameInfos.winner === \"UP\" ? { border: \"3px solid rgb(39, 255, 96)\" } : { border: \"3px solid rgb(255, 67, 67)\" }}>\n\t\t\t<StatusContainer>\n\t\t\t\t<State>{gameInfos.status}</State>\n\t\t\t\t<Id>#{gameInfos.CurrentGameId}</Id>\n\t\t\t</StatusContainer>\n\t\t\t<Up\n\t\t\t\tstyle={\n\t\t\t\t\tgameInfos.winner === \"UP\"\n\t\t\t\t\t\t? {}\n\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\tbackground: \"linear-gradient(90deg, rgb(206, 162, 206) 0%, rgb(149, 177, 254) 100%)\",\n\t\t\t\t\t\t\t\tcolor: \"rgb(84, 36, 50)\",\n\t\t\t\t\t\t\t\tborder: \"3px solid rgb(84, 36, 50)\"\n\t\t\t\t\t\t  }\n\t\t\t\t}>\n\t\t\t\tUP x{gameInfos.Pool1Payout} Payout\n\t\t\t</Up>\n\t\t\t<StatsContainer>\n\t\t\t\t<Stats>\n\t\t\t\t\t<Key>Closed ETH price</Key>\n\t\t\t\t\t<Value style={gameInfos.winner === \"UP\" ? { border: \"3px solid rgb(39, 255, 96)\" } : { border: \"3px solid rgb(255, 67, 67)\" }}>\n\t\t\t\t\t\t{gameInfos.PriceEnd} $\n\t\t\t\t\t</Value>\n\t\t\t\t</Stats>\n\t\t\t\t<Stats>\n\t\t\t\t\t<Key>Locked ETH price</Key>\n\t\t\t\t\t<Value>{gameInfos.PriceStart} $</Value>\n\t\t\t\t</Stats>\n\t\t\t\t<Stats>\n\t\t\t\t\t<Key>Prize pool</Key>\n\t\t\t\t\t<Value>\n\t\t\t\t\t\t{parseFloat(gameInfos.Pool0Amount) + parseFloat(gameInfos.Pool1Amount) > 0\n\t\t\t\t\t\t\t? (parseFloat(gameInfos.Pool0Amount) + parseFloat(gameInfos.Pool1Amount)).toFixed(2)\n\t\t\t\t\t\t\t: 0}{\" \"}\n\t\t\t\t\t\tMATIC\n\t\t\t\t\t</Value>\n\t\t\t\t</Stats>\n\t\t\t</StatsContainer>\n\t\t\t<Down\n\t\t\t\tstyle={\n\t\t\t\t\tgameInfos.winner === \"DOWN\"\n\t\t\t\t\t\t? {}\n\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\tbackground: \"linear-gradient(90deg, rgb(206, 162, 206) 0%, rgb(149, 177, 254) 100%)\",\n\t\t\t\t\t\t\t\tcolor: \"rgb(84, 36, 50)\",\n\t\t\t\t\t\t\t\tborder: \"3px solid rgb(84, 36, 50)\"\n\t\t\t\t\t\t  }\n\t\t\t\t}>\n\t\t\t\tDOWN x{gameInfos.Pool0Payout} Payout\n\t\t\t</Down>\n\t\t\t<OutputContainer>\n\t\t\t\t<Output>{gameInfos.playerState}</Output>\n\t\t\t</OutputContainer>\n\t\t</Container>\n\t)\n}\n\nconst Container = styled.div`\n\tbackground-image: linear-gradient(90deg, rgb(206, 162, 206) 0%, rgb(149, 177, 254) 100%);\n\tcolor: rgb(84, 36, 50);\n\tmargin-top: 5rem;\n\twidth: 400px;\n\theight: 350px;\n\tborder-radius: 1rem;\n\tdisplay: flex;\n\tflex-direction: column;\n\tfont-family: Inter, sans-serif;\n\tflex-direction: column;\n`\n\nconst StatusContainer = styled.div`\n\tbackground-color: #191b1f;\n\tborder: #191b1f;\n\tpadding: 0.5rem;\n\tborder-radius: 0.5rem;\n\tdisplay: flex;\n\twidth: 100%;\n\theight: 100%;\n`\n\nconst State = styled.div`\n\tgrid-area: Status;\n\twidth: 50%;\n\ttext-align: center;\n\tcolor: rgb(255, 67, 67);\n`\n\nconst Id = styled.div`\n\tgrid-area: Status;\n\twidth: 50%;\n\ttext-align: center;\n\tcolor: rgb(149, 177, 254);\n`\n\nconst Up = styled.div`\n\tpadding: 0.5rem;\n\tborder-radius: 0.5rem;\n\twidth: 100%;\n\tborder: 3px solid rgb(39, 255, 96);\n\tbackground: rgb(149, 177, 254);\n\tcolor: rgb(39, 255, 96);\n\ttext-align: center;\n`\n\nconst Down = styled.div`\n\tpadding: 0.5rem;\n\tborder-radius: 0.5rem;\n\twidth: 100%;\n\tborder: 3px solid rgb(255, 67, 67);\n\tbackground: rgb(206, 162, 206);\n\tcolor: rgb(255, 67, 67);\n\ttext-align: center;\n`\n\nconst StatsContainer = styled.div`\n\tbackground-color: #191b1f;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\tborder-radius: 0.5rem;\n`\n\nconst Stats = styled.div`\n\tpadding: 0.7rem;\n\tborder-radius: 0.5rem;\n\tdisplay: flex;\n\twidth: 100%;\n`\n\nconst Key = styled.div`\n\tbackground-color: rgb(33, 36, 41);\n\tborder: 1px solid rgb(33, 36, 41);\n\tpadding: 0.5rem;\n\tborder-radius: 0.5rem;\n\twidth: 100%;\n\ttext-align: center;\n\tcolor: rgb(149, 177, 254);\n`\n\nconst Value = styled.div`\n\tcolor: rgb(149, 177, 254);\n\tborder: 1px solid rgb(33, 36, 41);\n\tpadding: 0.5rem;\n\tborder-radius: 0.5rem;\n\twidth: 60%;\n\ttext-align: center;\n`\n\nconst OutputContainer = styled.div`\n\tbackground-image: linear-gradient(90deg, rgb(206, 162, 206) 0%, rgb(149, 177, 254) 100%);\n\tborder: 1px solid linear-gradient(90deg, rgb(206, 162, 206) 0%, rgb(149, 177, 254) 100%);\n\tpadding: 0.5rem;\n\tborder-radius: 0.5rem;\n\twidth: 100%;\n\theight: 10%;\n\tjustify-content: center;\n`\n\nconst Output = styled.p`\n\ttext-align: center;\n`\n\nexport default PreviousGame\n","/Users/gianningamy/cryptobet/front-end/refactoring/src/Components/Portfolio.jsx",["77","78"],"import React, { useContext } from \"react\"\nimport styled from \"styled-components\"\nimport { UserContext } from \"../Provider/UserProvider\"\n\nconst Portfolio = () => {\n\tconst { user: userInfos, userLoading, setUser } = useContext(UserContext)\n\n\tlet tmp = userInfos.account\n\tlet res = tmp.substring(0, 5) + \"...\" + tmp.substring(tmp.length - 4)\n\treturn (\n\t\t<Container>\n\t\t\t<Currency style={userInfos.network === 137 ? {} : { background: \"rgb(255, 67, 67)\", color: \"white\", width: \"100%\", \"text-align\": \"center\" }}>\n\t\t\t\t{userInfos.network === 137 ? \"Polygon\" : \"Wrong network\"}\n\t\t\t</Currency>\n\t\t\t{userInfos.network === 137 ? <Money>{parseFloat(userInfos.balance).toFixed(3)} MATIC</Money> : \"\"}\n\t\t\t{userInfos.network === 137 ? <Address>{res}</Address> : \"\"}\n\t\t</Container>\n\t)\n}\n\nconst Container = styled.div`\n\tbackground-color: #191b1f;\n\tborder: 1px solid #191b1f;\n\tpadding: 0.5rem;\n\tborder-radius: 0.5rem;\n\tdisplay: flex;\n\twidth: 25%;\n\tjustify-content: space-between;\n`\n\nconst Currency = styled.div`\n\tbackground-color: rgb(33, 36, 41);\n\tborder: 1px solid rgb(33, 36, 41);\n\tcolor: rgb(149, 103, 255);\n\tpadding: 0.5rem;\n\tborder-radius: 0.5rem;\n\tfont-family: Inter, sans-serif;\n`\n\nconst Money = styled.div`\n\tbackground-color: rgb(33, 36, 41);\n\tborder: 1px solid rgb(33, 36, 41);\n\tcolor: white;\n\tpadding: 0.5rem;\n\tborder-radius: 0.5rem;\n\tfont-family: Inter, sans-serif;\n`\n\nconst Address = styled.div`\n\tbackground-color: rgb(33, 36, 41);\n\tborder: 1px solid rgb(33, 36, 41);\n\tcolor: white;\n\tpadding: 0.5rem;\n\tborder-radius: 0.5rem;\n`\n\nexport default Portfolio\n","/Users/gianningamy/cryptobet/front-end/refactoring/src/Provider/UserProvider.jsx",[],"/Users/gianningamy/cryptobet/front-end/refactoring/src/Config/abi.js",[],"/Users/gianningamy/cryptobet/front-end/refactoring/src/Config/contract.js",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":207,"column":6,"nodeType":"85","messageId":"86","endLine":207,"endColumn":15},{"ruleId":"87","severity":1,"message":"88","line":253,"column":14,"nodeType":"89","messageId":"90","endLine":255,"endColumn":9},{"ruleId":"83","severity":1,"message":"91","line":276,"column":8,"nodeType":"85","messageId":"86","endLine":276,"endColumn":14},{"ruleId":"92","severity":1,"message":"93","line":281,"column":72,"nodeType":"94","messageId":"95","endLine":281,"endColumn":74},{"ruleId":"96","severity":1,"message":"97","line":349,"column":5,"nodeType":"98","endLine":349,"endColumn":14,"suggestions":"99"},{"ruleId":"96","severity":1,"message":"100","line":356,"column":5,"nodeType":"98","endLine":356,"endColumn":14,"suggestions":"101"},{"ruleId":"96","severity":1,"message":"102","line":373,"column":5,"nodeType":"98","endLine":373,"endColumn":36,"suggestions":"103"},{"ruleId":"87","severity":1,"message":"88","line":39,"column":12,"nodeType":"104","messageId":"90","endLine":41,"endColumn":7},{"ruleId":"96","severity":1,"message":"97","line":85,"column":5,"nodeType":"98","endLine":85,"endColumn":7,"suggestions":"105"},{"ruleId":"96","severity":1,"message":"106","line":90,"column":5,"nodeType":"98","endLine":90,"endColumn":11,"suggestions":"107"},{"ruleId":"96","severity":1,"message":"102","line":107,"column":5,"nodeType":"98","endLine":107,"endColumn":11,"suggestions":"108"},{"ruleId":"96","severity":1,"message":"109","line":125,"column":5,"nodeType":"98","endLine":125,"endColumn":7,"suggestions":"110"},{"ruleId":"83","severity":1,"message":"111","line":10,"column":27,"nodeType":"85","messageId":"86","endLine":10,"endColumn":38},{"ruleId":"83","severity":1,"message":"112","line":10,"column":40,"nodeType":"85","messageId":"86","endLine":10,"endColumn":47},{"ruleId":"92","severity":1,"message":"113","line":61,"column":18,"nodeType":"94","messageId":"95","endLine":61,"endColumn":20},{"ruleId":"83","severity":1,"message":"114","line":86,"column":9,"nodeType":"85","messageId":"86","endLine":86,"endColumn":16},{"ruleId":"83","severity":1,"message":"115","line":86,"column":18,"nodeType":"85","messageId":"86","endLine":86,"endColumn":28},{"ruleId":"96","severity":1,"message":"109","line":89,"column":5,"nodeType":"98","endLine":89,"endColumn":7,"suggestions":"116"},{"ruleId":"96","severity":1,"message":"109","line":77,"column":5,"nodeType":"98","endLine":77,"endColumn":7,"suggestions":"117"},{"ruleId":"83","severity":1,"message":"111","line":6,"column":27,"nodeType":"85","messageId":"86","endLine":6,"endColumn":38},{"ruleId":"83","severity":1,"message":"112","line":6,"column":40,"nodeType":"85","messageId":"86","endLine":6,"endColumn":47},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-unused-vars","'connected' is assigned a value but never used.","Identifier","unusedVar","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'game'.","FunctionExpression","unsafeRefs","'reward' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'logAccount'. Either include it or remove the dependency array.","ArrayExpression",["120"],"React Hook useEffect has missing dependencies: 'data' and 'getData'. Either include them or remove the dependency array. You can also do a functional update 'setData(d => ...)' if you only need 'data' in the 'setData' call.",["121"],"React Hook useEffect has a missing dependency: 'web3.eth.net'. Either include it or remove the dependency array.",["122"],"ArrowFunctionExpression",["123"],"React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["124"],["125"],"React Hook useEffect has missing dependencies: 'getGameInfos' and 'idCurrentGame'. Either include them or remove the dependency array.",["126"],"'userLoading' is assigned a value but never used.","'setUser' is assigned a value but never used.","Expected '===' and instead saw '=='.","'counter' is assigned a value but never used.","'setCounter' is assigned a value but never used.",["127"],["128"],"no-global-assign","no-unsafe-negation",{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},{"desc":"141","fix":"143"},{"desc":"141","fix":"144"},"Update the dependencies array to be: [counter, logAccount]",{"range":"145","text":"146"},"Update the dependencies array to be: [counter, data, getData]",{"range":"147","text":"148"},"Update the dependencies array to be: [selectedAccount, profileInfos, web3.eth.net]",{"range":"149","text":"150"},"Update the dependencies array to be: [logAccount]",{"range":"151","text":"152"},"Update the dependencies array to be: [getData, user]",{"range":"153","text":"154"},"Update the dependencies array to be: [user, web3.eth.net]",{"range":"155","text":"156"},"Update the dependencies array to be: [getGameInfos, idCurrentGame]",{"range":"157","text":"158"},{"range":"159","text":"158"},{"range":"160","text":"158"},[10984,10993],"[counter, logAccount]",[11091,11100],"[counter, data, getData]",[11466,11497],"[selectedAccount, profileInfos, web3.eth.net]",[2504,2506],"[logAccount]",[2564,2570],"[getData, user]",[2936,2942],"[user, web3.eth.net]",[3759,3761],"[getGameInfos, idCurrentGame]",[2715,2717],[2471,2473]]