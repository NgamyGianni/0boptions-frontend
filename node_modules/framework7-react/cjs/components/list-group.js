"use strict";

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _utils = require("../shared/utils");

var _mixins = require("../shared/mixins");

var _listContext = require("../shared/list-context");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var ListGroup = /*#__PURE__*/(0, _react.forwardRef)(function (props, ref) {
  var className = props.className,
      id = props.id,
      style = props.style,
      children = props.children,
      simpleList = props.simpleList,
      mediaList = props.mediaList,
      sortable = props.sortable,
      sortableOpposite = props.sortableOpposite,
      sortableTapHold = props.sortableTapHold,
      sortableMoveElements = props.sortableMoveElements;
  var extraAttrs = (0, _utils.getExtraAttrs)(props);
  var listContext = (0, _react.useContext)(_listContext.ListContext);
  var elRef = (0, _react.useRef)(null);
  (0, _react.useImperativeHandle)(ref, function () {
    return {
      el: elRef.current
    };
  });
  var classes = (0, _utils.classNames)(className, 'list-group', {
    'media-list': mediaList,
    sortable: sortable,
    'sortable-tap-hold': sortableTapHold,
    'sortable-opposite': sortableOpposite
  }, (0, _mixins.colorClasses)(props));
  return /*#__PURE__*/_react.default.createElement("div", _extends({
    id: id,
    style: style,
    className: classes,
    "data-sortable-move-elements": typeof sortableMoveElements !== 'undefined' ? sortableMoveElements.toString() : undefined,
    ref: elRef
  }, extraAttrs), /*#__PURE__*/_react.default.createElement("ul", null, /*#__PURE__*/_react.default.createElement(_listContext.ListContext.Provider, {
    value: {
      listIsMedia: mediaList || listContext.listIsMedia,
      listIsSimple: simpleList || listContext.listIsSimple,
      listIsSortable: sortable || listContext.listIsSortable,
      listIsSortableOpposite: sortableOpposite || listContext.listIsSortableOpposite
    }
  }, children)));
});
ListGroup.displayName = 'f7-list-group';
var _default = ListGroup;
exports.default = _default;