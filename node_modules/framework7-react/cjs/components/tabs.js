"use strict";

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _useIsomorphicLayoutEffect = require("../shared/use-isomorphic-layout-effect");

var _utils = require("../shared/utils");

var _mixins = require("../shared/mixins");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }


var Tabs = /*#__PURE__*/(0, _react.forwardRef)(function (props, ref) {
  var className = props.className,
      id = props.id,
      style = props.style,
      children = props.children,
      animated = props.animated,
      swipeable = props.swipeable,
      routable = props.routable,
      swiperParams = props.swiperParams;
  var extraAttrs = (0, _utils.getExtraAttrs)(props);
  var elRef = (0, _react.useRef)(null);
  (0, _react.useImperativeHandle)(ref, function () {
    return {
      el: elRef.current
    };
  });
  (0, _useIsomorphicLayoutEffect.useIsomorphicLayoutEffect)(function () {
    if (!swipeable || !swiperParams) return;
    if (!elRef.current) return;
    elRef.current.f7SwiperParams = swiperParams;
  }, []);
  var classes = (0, _utils.classNames)(className, (0, _mixins.colorClasses)(props));
  var wrapClasses = (0, _utils.classNames)({
    'tabs-animated-wrap': animated,
    'tabs-swipeable-wrap': swipeable
  });
  var tabsClasses = (0, _utils.classNames)({
    tabs: true,
    'tabs-routable': routable
  });

  if (animated || swipeable) {
    return /*#__PURE__*/_react.default.createElement("div", _extends({
      id: id,
      style: style,
      className: (0, _utils.classNames)(wrapClasses, classes),
      ref: elRef
    }, extraAttrs), /*#__PURE__*/_react.default.createElement("div", {
      className: tabsClasses
    }, children));
  }

  return /*#__PURE__*/_react.default.createElement("div", _extends({
    id: id,
    style: style,
    className: (0, _utils.classNames)(tabsClasses, classes),
    ref: elRef
  }, extraAttrs), children);
});
Tabs.displayName = 'f7-tabs';
var _default = Tabs;
exports.default = _default;