"use strict";

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _utils = require("../shared/utils");

var _mixins = require("../shared/mixins");

var _useRouteProps = require("../shared/use-route-props");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var MenuDropdownItem = /*#__PURE__*/(0, _react.forwardRef)(function (props, ref) {
  var className = props.className,
      id = props.id,
      style = props.style,
      children = props.children,
      link = props.link,
      href = props.href,
      target = props.target,
      text = props.text,
      divider = props.divider,
      menuClose = props.menuClose;
  var extraAttrs = (0, _utils.getExtraAttrs)(props);
  var elRef = (0, _react.useRef)(null);

  var onClick = function onClick(e) {
    (0, _utils.emit)(props, 'click', e);
  };

  (0, _react.useImperativeHandle)(ref, function () {
    return {
      el: elRef.current
    };
  });
  (0, _useRouteProps.useRouteProps)(elRef, props);
  var isLink = link || href || href === '';
  var Tag = isLink ? 'a' : 'div';
  var classes = (0, _utils.classNames)({
    'menu-dropdown-link': isLink && !divider,
    'menu-dropdown-item': !isLink && !divider,
    'menu-dropdown-divider': divider
  }, className, (0, _mixins.colorClasses)(props), (0, _mixins.routerClasses)(props), (0, _mixins.actionsClasses)(props), {
    'menu-close': typeof menuClose === 'undefined'
  });
  var hrefComputed = href;
  if (typeof hrefComputed === 'undefined' && link) hrefComputed = '#';

  var attrs = _extends({
    href: hrefComputed,
    target: target
  }, (0, _mixins.routerAttrs)(props), (0, _mixins.actionsAttrs)(props));

  return /*#__PURE__*/_react.default.createElement(Tag, _extends({
    className: classes,
    id: id,
    style: style,
    ref: elRef
  }, attrs, extraAttrs, {
    onClick: onClick
  }), text, children);
});
MenuDropdownItem.displayName = 'f7-menu-dropdown-item';
var _default = MenuDropdownItem;
exports.default = _default;