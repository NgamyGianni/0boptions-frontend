"use strict";

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _utils = require("../shared/utils");

var _mixins = require("../shared/mixins");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var Segmented = /*#__PURE__*/(0, _react.forwardRef)(function (props, ref) {
  var className = props.className,
      id = props.id,
      style = props.style,
      children = props.children,
      raised = props.raised,
      raisedIos = props.raisedIos,
      raisedMd = props.raisedMd,
      raisedAurora = props.raisedAurora,
      round = props.round,
      roundIos = props.roundIos,
      roundMd = props.roundMd,
      roundAurora = props.roundAurora,
      strong = props.strong,
      strongIos = props.strongIos,
      strongMd = props.strongMd,
      strongAurora = props.strongAurora,
      _props$tag = props.tag,
      tag = _props$tag === void 0 ? 'div' : _props$tag;
  var extraAttrs = (0, _utils.getExtraAttrs)(props);
  var elRef = (0, _react.useRef)(null);
  (0, _react.useImperativeHandle)(ref, function () {
    return {
      el: elRef.current
    };
  });
  var classes = (0, _utils.classNames)(className, {
    segmented: true,
    'segmented-raised': raised,
    'segmented-raised-ios': raisedIos,
    'segmented-raised-aurora': raisedAurora,
    'segmented-raised-md': raisedMd,
    'segmented-round': round,
    'segmented-round-ios': roundIos,
    'segmented-round-aurora': roundAurora,
    'segmented-round-md': roundMd,
    'segmented-strong': strong,
    'segmented-strong-ios': strongIos,
    'segmented-strong-md': strongMd,
    'segmented-strong-aurora': strongAurora
  }, (0, _mixins.colorClasses)(props));
  var SegmentedTag = tag;
  return /*#__PURE__*/_react.default.createElement(SegmentedTag, _extends({
    id: id,
    style: style,
    className: classes,
    ref: elRef
  }, extraAttrs), children, (strong || strongIos || strongMd || strongAurora) && /*#__PURE__*/_react.default.createElement("span", {
    className: "segmented-highlight"
  }));
});
Segmented.displayName = 'f7-segmented';
var _default = Segmented;
exports.default = _default;