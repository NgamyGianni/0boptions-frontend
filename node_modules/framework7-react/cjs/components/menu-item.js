"use strict";

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _useIsomorphicLayoutEffect = require("../shared/use-isomorphic-layout-effect");

var _utils = require("../shared/utils");

var _mixins = require("../shared/mixins");

var _useRouteProps = require("../shared/use-route-props");

var _useIcon = require("../shared/use-icon");

var _f = require("../shared/f7");

var _useTooltip = require("../shared/use-tooltip");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var MenuItem = /*#__PURE__*/(0, _react.forwardRef)(function (props, ref) {
  var className = props.className,
      id = props.id,
      style = props.style,
      link = props.link,
      href = props.href,
      target = props.target,
      text = props.text,
      dropdown = props.dropdown,
      iconOnly = props.iconOnly;
  var extraAttrs = (0, _utils.getExtraAttrs)(props);
  var elRef = (0, _react.useRef)(null);

  var onClick = function onClick(e) {
    (0, _utils.emit)(props, 'click', e);
  };

  var onOpened = function onOpened(el) {
    if (elRef.current !== el) return;
    (0, _utils.emit)(props, 'menuOpened', el);
  };

  var onClosed = function onClosed(el) {
    if (elRef.current !== el) return;
    (0, _utils.emit)(props, 'menuClosed', el);
  };

  (0, _react.useImperativeHandle)(ref, function () {
    return {
      el: elRef.current
    };
  });
  (0, _useTooltip.useTooltip)(elRef, props);
  (0, _useRouteProps.useRouteProps)(elRef, props);

  var attachEvents = function attachEvents() {
    (0, _f.f7ready)(function () {
      _f.f7.on('menuOpened', onOpened);

      _f.f7.on('menuClosed', onClosed);
    });
  };

  var detachEvents = function detachEvents() {
    _f.f7.off('menuOpened', onOpened);

    _f.f7.off('menuClosed', onOpened);
  };

  (0, _useIsomorphicLayoutEffect.useIsomorphicLayoutEffect)(function () {
    attachEvents();
    return detachEvents;
  });
  var iconEl = (0, _useIcon.useIcon)(props);
  var slots = (0, _utils.getSlots)(props);
  var iconOnlyComputed;

  if (iconOnly || !text && slots.text && slots.text.length === 0 || !text && !slots.text) {
    iconOnlyComputed = true;
  } else {
    iconOnlyComputed = false;
  }

  var isLink = link || href || href === '';
  var Tag = isLink ? 'a' : 'div';
  var isDropdown = dropdown || dropdown === '';
  var classes = (0, _utils.classNames)({
    'menu-item': true,
    'menu-item-dropdown': isDropdown,
    'icon-only': iconOnlyComputed
  }, className, (0, _mixins.colorClasses)(props), (0, _mixins.routerClasses)(props), (0, _mixins.actionsClasses)(props));
  var hrefComputed = href;
  if (typeof hrefComputed === 'undefined' && link) hrefComputed = '#';

  var attrs = _extends({
    href: hrefComputed,
    target: target
  }, (0, _mixins.routerAttrs)(props), (0, _mixins.actionsAttrs)(props));

  return /*#__PURE__*/_react.default.createElement(Tag, _extends({
    ref: elRef,
    className: classes,
    id: id,
    style: style
  }, attrs, extraAttrs, {
    onClick: onClick
  }), (text || slots.text && slots.text.length || iconEl) && /*#__PURE__*/_react.default.createElement("div", {
    className: "menu-item-content"
  }, text, iconEl, slots.text), slots.default);
});
MenuItem.displayName = 'f7-menu-item';
var _default = MenuItem;
exports.default = _default;