"use strict";

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _useIsomorphicLayoutEffect = require("../shared/use-isomorphic-layout-effect");

var _utils = require("../shared/utils");

var _mixins = require("../shared/mixins");

var _f = require("../shared/f7");

var _listContext = require("../shared/list-context");

var _useTab = require("../shared/use-tab");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }


var List = /*#__PURE__*/(0, _react.forwardRef)(function (props, ref) {
  var _f7VirtualList = (0, _react.useRef)(null);

  var className = props.className,
      id = props.id,
      style = props.style,
      inset = props.inset,
      xsmallInset = props.xsmallInset,
      smallInset = props.smallInset,
      mediumInset = props.mediumInset,
      largeInset = props.largeInset,
      xlargeInset = props.xlargeInset,
      mediaList = props.mediaList,
      sortable = props.sortable,
      sortableTapHold = props.sortableTapHold,
      sortableEnabled = props.sortableEnabled,
      sortableMoveElements = props.sortableMoveElements,
      sortableOpposite = props.sortableOpposite,
      accordionList = props.accordionList,
      accordionOpposite = props.accordionOpposite,
      contactsList = props.contactsList,
      simpleList = props.simpleList,
      linksList = props.linksList,
      menuList = props.menuList,
      noHairlines = props.noHairlines,
      noHairlinesBetween = props.noHairlinesBetween,
      noHairlinesMd = props.noHairlinesMd,
      noHairlinesBetweenMd = props.noHairlinesBetweenMd,
      noHairlinesIos = props.noHairlinesIos,
      noHairlinesBetweenIos = props.noHairlinesBetweenIos,
      noHairlinesAurora = props.noHairlinesAurora,
      noHairlinesBetweenAurora = props.noHairlinesBetweenAurora,
      noChevron = props.noChevron,
      chevronCenter = props.chevronCenter,
      tab = props.tab,
      tabActive = props.tabActive,
      form = props.form,
      formStoreData = props.formStoreData,
      inlineLabels = props.inlineLabels,
      virtualList = props.virtualList,
      virtualListParams = props.virtualListParams;
  var extraAttrs = (0, _utils.getExtraAttrs)(props);
  var elRef = (0, _react.useRef)(null);

  var onSubmit = function onSubmit(event) {
    (0, _utils.emit)(props, 'submit', event);
  };

  var onSortableEnable = function onSortableEnable(el) {
    if (elRef.current !== el) return;
    (0, _utils.emit)(props, 'sortableEnable');
  };

  var onSortableDisable = function onSortableDisable(el) {
    if (elRef.current !== el) return;
    (0, _utils.emit)(props, 'sortableDisable');
  };

  var onSortableSort = function onSortableSort(el, sortData, listEl) {
    if (elRef.current !== listEl) return;
    (0, _utils.emit)(props, 'sortableSort', sortData);
  };

  var onSortableMove = function onSortableMove(el, listEl) {
    if (elRef.current !== listEl) return;
    (0, _utils.emit)(props, 'sortableMove', el, listEl);
  };

  (0, _react.useImperativeHandle)(ref, function () {
    return {
      el: elRef.current,
      f7VirtualList: function f7VirtualList() {
        return _f7VirtualList.current;
      }
    };
  });
  (0, _useTab.useTab)(elRef, props);

  var attachEvents = function attachEvents() {
    (0, _f.f7ready)(function () {
      _f.f7.on('sortableEnable', onSortableEnable);

      _f.f7.on('sortableDisable', onSortableDisable);

      _f.f7.on('sortableSort', onSortableSort);

      _f.f7.on('sortableMove', onSortableMove);
    });
  };

  var detachEvents = function detachEvents() {
    if (!_f.f7) return;

    _f.f7.off('sortableEnable', onSortableEnable);

    _f.f7.off('sortableDisable', onSortableDisable);

    _f.f7.off('sortableSort', onSortableSort);

    _f.f7.off('sortableMove', onSortableMove);
  };

  var onMount = function onMount() {
    (0, _f.f7ready)(function () {
      if (!virtualList) return;
      var vlParams = virtualListParams || {};
      if (!vlParams.renderItem && !vlParams.renderExternal) return;
      _f7VirtualList.current = _f.f7.virtualList.create((0, _utils.extend)({
        el: elRef.current,
        on: {
          itemBeforeInsert: function itemBeforeInsert(itemEl, item) {
            var vl = this;
            (0, _utils.emit)(props, 'virtualItemBeforeInsert', vl, itemEl, item);
          },
          beforeClear: function beforeClear(fragment) {
            var vl = this;
            (0, _utils.emit)(props, 'virtualBeforeClear', vl, fragment);
          },
          itemsBeforeInsert: function itemsBeforeInsert(fragment) {
            var vl = this;
            (0, _utils.emit)(props, 'virtualItemsBeforeInsert', vl, fragment);
          },
          itemsAfterInsert: function itemsAfterInsert(fragment) {
            var vl = this;
            (0, _utils.emit)(props, 'virtualItemsAfterInsert', vl, fragment);
          }
        }
      }, vlParams));
    });
  };

  var onDestroy = function onDestroy() {
    if (!_f.f7) return;
    if (!(virtualList && _f7VirtualList.current)) return;
    if (_f7VirtualList.current.destroy) _f7VirtualList.current.destroy();
    _f7VirtualList.current = null;
  };

  (0, _useIsomorphicLayoutEffect.useIsomorphicLayoutEffect)(function () {
    onMount();
    return onDestroy;
  }, []);
  (0, _useIsomorphicLayoutEffect.useIsomorphicLayoutEffect)(function () {
    attachEvents();
    return detachEvents;
  });
  var slots = (0, _utils.getSlots)(props);
  var slotsList = slots.list,
      slotsDefault = slots.default;
  var rootChildrenBeforeList = [];
  var rootChildrenAfterList = [];
  var ulChildren = slotsList || [];
  var flattenSlots = (0, _utils.flattenArray)(slotsDefault);
  var wasUlChild = false;
  flattenSlots.forEach(function (child) {
    if (typeof child === 'undefined') return;
    var tag = child.type && (child.type.displayName || child.type.name);

    if (!tag && typeof child.type === 'string') {
      tag = child.type;
    }

    if (!tag || tag && !(tag === 'li' || tag.indexOf('f7-list-item') >= 0 || tag.indexOf('f7-list-button') >= 0 || tag.indexOf('f7-list-input') >= 0)) {
      if (wasUlChild) rootChildrenAfterList.push(child);else rootChildrenBeforeList.push(child);
    } else if (tag) {
      wasUlChild = true;
      ulChildren.push(child);
    }
  });
  var ListTag = form ? 'form' : 'div';
  var classes = (0, _utils.classNames)(className, 'list', {
    inset: inset,
    'xsmall-inset': xsmallInset,
    'small-inset': smallInset,
    'medium-inset': mediumInset,
    'large-inset': largeInset,
    'xlarge-inset': xlargeInset,
    'media-list': mediaList,
    'simple-list': simpleList,
    'links-list': linksList,
    'menu-list': menuList,
    sortable: sortable,
    'sortable-tap-hold': sortableTapHold,
    'sortable-enabled': sortableEnabled,
    'sortable-opposite': sortableOpposite,
    'accordion-list': accordionList,
    'accordion-opposite': accordionOpposite,
    'contacts-list': contactsList,
    'virtual-list': virtualList,
    tab: tab,
    'tab-active': tabActive,
    'no-hairlines': noHairlines,
    'no-hairlines-md': noHairlinesMd,
    'no-hairlines-ios': noHairlinesIos,
    'no-hairlines-aurora': noHairlinesAurora,
    'no-hairlines-between': noHairlinesBetween,
    'no-hairlines-between-md': noHairlinesBetweenMd,
    'no-hairlines-between-ios': noHairlinesBetweenIos,
    'no-hairlines-between-aurora': noHairlinesBetweenAurora,
    'form-store-data': formStoreData,
    'inline-labels': inlineLabels,
    'no-chevron': noChevron,
    'chevron-center': chevronCenter
  }, (0, _mixins.colorClasses)(props));
  return /*#__PURE__*/_react.default.createElement(ListTag, _extends({
    id: id,
    ref: elRef,
    style: style,
    className: classes
  }, extraAttrs, {
    "data-sortable-move-elements": typeof sortableMoveElements !== 'undefined' ? sortableMoveElements.toString() : undefined,
    onSubmit: onSubmit
  }), /*#__PURE__*/_react.default.createElement(_listContext.ListContext.Provider, {
    value: {
      listIsMedia: mediaList,
      listIsSimple: simpleList,
      listIsSortable: sortable,
      listIsSortableOpposite: sortableOpposite
    }
  }, slots['before-list'], rootChildrenBeforeList, ulChildren.length > 0 && /*#__PURE__*/_react.default.createElement("ul", null, ulChildren), slots['after-list'], rootChildrenAfterList));
});
List.displayName = 'f7-list';
var _default = List;
exports.default = _default;