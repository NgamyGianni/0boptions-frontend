"use strict";

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _utils = require("../shared/utils");

var _mixins = require("../shared/mixins");

var _useTheme = require("../shared/use-theme");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var Preloader = /*#__PURE__*/(0, _react.forwardRef)(function (props, ref) {
  var theme = (0, _useTheme.useTheme)();
  var className = props.className,
      id = props.id,
      style = props.style,
      size = props.size;
  var extraAttrs = (0, _utils.getExtraAttrs)(props);
  var elRef = (0, _react.useRef)(null);
  (0, _react.useImperativeHandle)(ref, function () {
    return {
      el: elRef.current
    };
  });
  var preloaderStyle = {};
  var sizeComputed = size;

  if (sizeComputed && typeof sizeComputed === 'string' && sizeComputed.indexOf('px') >= 0) {
    sizeComputed = sizeComputed.replace('px', '');
  }

  if (sizeComputed) {
    preloaderStyle.width = sizeComputed + "px";
    preloaderStyle.height = sizeComputed + "px";
    preloaderStyle['--f7-preloader-size'] = sizeComputed + "px";
  }

  if (style) (0, _utils.extend)(preloaderStyle, style || {});
  var innerEl;

  if (theme && theme.md) {
    innerEl = /*#__PURE__*/_react.default.createElement("span", {
      className: "preloader-inner"
    }, /*#__PURE__*/_react.default.createElement("svg", {
      viewBox: "0 0 36 36"
    }, /*#__PURE__*/_react.default.createElement("circle", {
      cx: "18",
      cy: "18",
      r: "16"
    })));
  } else if (theme && theme.ios) {
    innerEl = /*#__PURE__*/_react.default.createElement("span", {
      className: "preloader-inner"
    }, /*#__PURE__*/_react.default.createElement("span", {
      className: "preloader-inner-line"
    }), /*#__PURE__*/_react.default.createElement("span", {
      className: "preloader-inner-line"
    }), /*#__PURE__*/_react.default.createElement("span", {
      className: "preloader-inner-line"
    }), /*#__PURE__*/_react.default.createElement("span", {
      className: "preloader-inner-line"
    }), /*#__PURE__*/_react.default.createElement("span", {
      className: "preloader-inner-line"
    }), /*#__PURE__*/_react.default.createElement("span", {
      className: "preloader-inner-line"
    }), /*#__PURE__*/_react.default.createElement("span", {
      className: "preloader-inner-line"
    }), /*#__PURE__*/_react.default.createElement("span", {
      className: "preloader-inner-line"
    }));
  } else if (theme && theme.aurora) {
    innerEl = /*#__PURE__*/_react.default.createElement("span", {
      className: "preloader-inner"
    }, /*#__PURE__*/_react.default.createElement("span", {
      className: "preloader-inner-circle"
    }));
  } else if (!theme) {
    innerEl = /*#__PURE__*/_react.default.createElement("span", {
      className: "preloader-inner"
    });
  }

  var classes = (0, _utils.classNames)(className, 'preloader', (0, _mixins.colorClasses)(props));
  return /*#__PURE__*/_react.default.createElement("span", _extends({
    id: id,
    style: preloaderStyle,
    className: classes,
    ref: elRef
  }, extraAttrs), innerEl);
});
Preloader.displayName = 'f7-preloader';
var _default = Preloader;
exports.default = _default;