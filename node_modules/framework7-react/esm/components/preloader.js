function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React, { forwardRef, useRef, useImperativeHandle } from 'react';
import { classNames, getExtraAttrs, extend } from '../shared/utils';
import { colorClasses } from '../shared/mixins';
import { useTheme } from '../shared/use-theme';

var Preloader = /*#__PURE__*/forwardRef(function (props, ref) {
  var theme = useTheme();
  var className = props.className,
      id = props.id,
      style = props.style,
      size = props.size;
  var extraAttrs = getExtraAttrs(props);
  var elRef = useRef(null);
  useImperativeHandle(ref, function () {
    return {
      el: elRef.current
    };
  });
  var preloaderStyle = {};
  var sizeComputed = size;

  if (sizeComputed && typeof sizeComputed === 'string' && sizeComputed.indexOf('px') >= 0) {
    sizeComputed = sizeComputed.replace('px', '');
  }

  if (sizeComputed) {
    preloaderStyle.width = sizeComputed + "px";
    preloaderStyle.height = sizeComputed + "px";
    preloaderStyle['--f7-preloader-size'] = sizeComputed + "px";
  }

  if (style) extend(preloaderStyle, style || {});
  var innerEl;

  if (theme && theme.md) {
    innerEl = /*#__PURE__*/React.createElement("span", {
      className: "preloader-inner"
    }, /*#__PURE__*/React.createElement("svg", {
      viewBox: "0 0 36 36"
    }, /*#__PURE__*/React.createElement("circle", {
      cx: "18",
      cy: "18",
      r: "16"
    })));
  } else if (theme && theme.ios) {
    innerEl = /*#__PURE__*/React.createElement("span", {
      className: "preloader-inner"
    }, /*#__PURE__*/React.createElement("span", {
      className: "preloader-inner-line"
    }), /*#__PURE__*/React.createElement("span", {
      className: "preloader-inner-line"
    }), /*#__PURE__*/React.createElement("span", {
      className: "preloader-inner-line"
    }), /*#__PURE__*/React.createElement("span", {
      className: "preloader-inner-line"
    }), /*#__PURE__*/React.createElement("span", {
      className: "preloader-inner-line"
    }), /*#__PURE__*/React.createElement("span", {
      className: "preloader-inner-line"
    }), /*#__PURE__*/React.createElement("span", {
      className: "preloader-inner-line"
    }), /*#__PURE__*/React.createElement("span", {
      className: "preloader-inner-line"
    }));
  } else if (theme && theme.aurora) {
    innerEl = /*#__PURE__*/React.createElement("span", {
      className: "preloader-inner"
    }, /*#__PURE__*/React.createElement("span", {
      className: "preloader-inner-circle"
    }));
  } else if (!theme) {
    innerEl = /*#__PURE__*/React.createElement("span", {
      className: "preloader-inner"
    });
  }

  var classes = classNames(className, 'preloader', colorClasses(props));
  return /*#__PURE__*/React.createElement("span", _extends({
    id: id,
    style: preloaderStyle,
    className: classes,
    ref: elRef
  }, extraAttrs), innerEl);
});
Preloader.displayName = 'f7-preloader';
export default Preloader;