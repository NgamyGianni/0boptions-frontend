function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React, { forwardRef, useRef, useImperativeHandle } from 'react';
import { classNames, getExtraAttrs, getSlots, emit } from '../shared/utils';
import { colorClasses } from '../shared/mixins';

var Message = /*#__PURE__*/forwardRef(function (props, ref) {
  var className = props.className,
      id = props.id,
      style = props.style,
      text = props.text,
      name = props.name,
      avatar = props.avatar,
      _props$type = props.type,
      type = _props$type === void 0 ? 'sent' : _props$type,
      image = props.image,
      header = props.header,
      footer = props.footer,
      textHeader = props.textHeader,
      textFooter = props.textFooter,
      first = props.first,
      last = props.last,
      tail = props.tail,
      sameName = props.sameName,
      sameHeader = props.sameHeader,
      sameFooter = props.sameFooter,
      sameAvatar = props.sameAvatar,
      typing = props.typing;
  var extraAttrs = getExtraAttrs(props);
  var elRef = useRef(null);

  var onClick = function onClick(event) {
    emit(props, 'click', event);
  };

  var onNameClick = function onNameClick(event) {
    emit(props, 'clickName', event);
  };

  var onTextClick = function onTextClick(event) {
    emit(props, 'clickText', event);
  };

  var onAvatarClick = function onAvatarClick(event) {
    emit(props, 'clickAvatar', event);
  };

  var onHeaderClick = function onHeaderClick(event) {
    emit(props, 'clickHeader', event);
  };

  var onFooterClick = function onFooterClick(event) {
    emit(props, 'clickFooter', event);
  };

  var onBubbleClick = function onBubbleClick(event) {
    emit(props, 'clickBubble', event);
  };

  useImperativeHandle(ref, function () {
    return {
      el: elRef.current
    };
  });
  var slots = getSlots(props);
  var classes = classNames(className, 'message', {
    'message-sent': type === 'sent',
    'message-received': type === 'received',
    'message-typing': typing,
    'message-first': first,
    'message-last': last,
    'message-tail': tail,
    'message-same-name': sameName,
    'message-same-header': sameHeader,
    'message-same-footer': sameFooter,
    'message-same-avatar': sameAvatar
  }, colorClasses(props));
  return /*#__PURE__*/React.createElement("div", _extends({
    id: id,
    style: style,
    className: classes,
    ref: elRef
  }, extraAttrs, {
    onClick: onClick
  }), slots.start, (avatar || slots.avatar) && /*#__PURE__*/React.createElement("div", {
    className: "message-avatar",
    style: {
      backgroundImage: avatar && "url(" + avatar + ")"
    },
    onClick: onAvatarClick
  }, slots.avatar), /*#__PURE__*/React.createElement("div", {
    className: "message-content"
  }, slots['content-start'], (slots.name || name) && /*#__PURE__*/React.createElement("div", {
    className: "message-name",
    onClick: onNameClick
  }, name, slots.name), (slots.header || header) && /*#__PURE__*/React.createElement("div", {
    className: "message-header",
    onClick: onHeaderClick
  }, header, slots.header), /*#__PURE__*/React.createElement("div", {
    className: "message-bubble",
    onClick: onBubbleClick
  }, slots['bubble-start'], (slots.image || image) && /*#__PURE__*/React.createElement("div", {
    className: "message-image"
  }, slots.image || /*#__PURE__*/React.createElement("img", {
    src: image
  })), (slots['text-header'] || textHeader) && /*#__PURE__*/React.createElement("div", {
    className: "message-text-header"
  }, textHeader, slots['text-header']), (slots.text || text || typing) && /*#__PURE__*/React.createElement("div", {
    className: "message-text",
    onClick: onTextClick
  }, text, slots.text, typing && /*#__PURE__*/React.createElement("div", {
    className: "message-typing-indicator"
  }, /*#__PURE__*/React.createElement("div", null), /*#__PURE__*/React.createElement("div", null), /*#__PURE__*/React.createElement("div", null))), (slots['text-footer'] || textFooter) && /*#__PURE__*/React.createElement("div", {
    className: "message-text-footer"
  }, textFooter, slots['text-footer']), slots['bubble-end'], slots.default), (slots.footer || footer) && /*#__PURE__*/React.createElement("div", {
    className: "message-footer",
    onClick: onFooterClick
  }, footer, slots.footer), slots['content-end']), slots.end);
});
Message.displayName = 'f7-message';
export default Message;