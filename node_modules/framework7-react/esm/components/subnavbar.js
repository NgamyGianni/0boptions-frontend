function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React, { forwardRef, useRef, useImperativeHandle } from 'react';
import { classNames, getExtraAttrs } from '../shared/utils';
import { colorClasses } from '../shared/mixins';

var Subnavbar = /*#__PURE__*/forwardRef(function (props, ref) {
  var className = props.className,
      id = props.id,
      style = props.style,
      children = props.children,
      _props$inner = props.inner,
      inner = _props$inner === void 0 ? true : _props$inner,
      title = props.title,
      sliding = props.sliding;
  var extraAttrs = getExtraAttrs(props);
  var elRef = useRef(null);
  useImperativeHandle(ref, function () {
    return {
      el: elRef.current
    };
  });
  var classes = classNames(className, 'subnavbar', {
    sliding: sliding
  }, colorClasses(props));
  return /*#__PURE__*/React.createElement("div", _extends({
    className: classes,
    id: id,
    style: style,
    ref: elRef
  }, extraAttrs), inner ? /*#__PURE__*/React.createElement("div", {
    className: "subnavbar-inner"
  }, title && /*#__PURE__*/React.createElement("div", {
    className: "subnavbar-title"
  }, title), children) : children);
});
Subnavbar.displayName = 'f7-subnavbar';
export default Subnavbar;