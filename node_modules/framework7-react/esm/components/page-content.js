function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React, { forwardRef, useRef, useImperativeHandle } from 'react';
import { useIsomorphicLayoutEffect } from '../shared/use-isomorphic-layout-effect';
import { classNames, getExtraAttrs, emit } from '../shared/utils';
import { colorClasses } from '../shared/mixins';
import Preloader from './preloader';
import { useTab } from '../shared/use-tab';
import { f7ready, f7 } from '../shared/f7';

var PageContent = /*#__PURE__*/forwardRef(function (props, ref) {
  var className = props.className,
      id = props.id,
      style = props.style,
      children = props.children,
      tab = props.tab,
      tabActive = props.tabActive,
      ptr = props.ptr,
      ptrDistance = props.ptrDistance,
      _props$ptrPreloader = props.ptrPreloader,
      ptrPreloader = _props$ptrPreloader === void 0 ? true : _props$ptrPreloader,
      ptrBottom = props.ptrBottom,
      ptrMousewheel = props.ptrMousewheel,
      infinite = props.infinite,
      infiniteTop = props.infiniteTop,
      infiniteDistance = props.infiniteDistance,
      _props$infinitePreloa = props.infinitePreloader,
      infinitePreloader = _props$infinitePreloa === void 0 ? true : _props$infinitePreloa,
      hideBarsOnScroll = props.hideBarsOnScroll,
      hideNavbarOnScroll = props.hideNavbarOnScroll,
      hideToolbarOnScroll = props.hideToolbarOnScroll,
      messagesContent = props.messagesContent,
      loginScreen = props.loginScreen;
  var extraAttrs = getExtraAttrs(props);
  var elRef = useRef(null);

  var onPtrPullStart = function onPtrPullStart(el) {
    if (elRef.current !== el) return;
    emit(props, 'ptrPullStart');
  };

  var onPtrPullMove = function onPtrPullMove(el) {
    if (elRef.current !== el) return;
    emit(props, 'ptrPullMove');
  };

  var onPtrPullEnd = function onPtrPullEnd(el) {
    if (elRef.current !== el) return;
    emit(props, 'ptrPullEnd');
  };

  var onPtrRefresh = function onPtrRefresh(el, done) {
    if (elRef.current !== el) return;
    emit(props, 'ptrRefresh', done);
  };

  var onPtrDone = function onPtrDone(el) {
    if (elRef.current !== el) return;
    emit(props, 'ptrDone');
  };

  var onInfinite = function onInfinite(el) {
    if (elRef.current !== el) return;
    emit(props, 'infinite');
  };

  useImperativeHandle(ref, function () {
    return {
      el: elRef.current
    };
  });
  useTab(elRef, props);

  var attachEvents = function attachEvents() {
    f7ready(function () {
      if (ptr) {
        f7.on('ptrPullStart', onPtrPullStart);
        f7.on('ptrPullMove', onPtrPullMove);
        f7.on('ptrPullEnd', onPtrPullEnd);
        f7.on('ptrRefresh', onPtrRefresh);
        f7.on('ptrDone', onPtrDone);
      }

      if (infinite) {
        f7.on('infinite', onInfinite);
      }
    });
  };

  var detachEvents = function detachEvents() {
    if (!f7) return;
    f7.off('ptrPullStart', onPtrPullStart);
    f7.off('ptrPullMove', onPtrPullMove);
    f7.off('ptrPullEnd', onPtrPullEnd);
    f7.off('ptrRefresh', onPtrRefresh);
    f7.off('ptrDone', onPtrDone);
    f7.off('infinite', onInfinite);
  };

  useIsomorphicLayoutEffect(function () {
    attachEvents();
    return detachEvents;
  });
  var ptrEl;
  var infiniteEl;

  if (ptr && ptrPreloader) {
    ptrEl = /*#__PURE__*/React.createElement("div", {
      className: "ptr-preloader"
    }, /*#__PURE__*/React.createElement(Preloader, null), /*#__PURE__*/React.createElement("div", {
      className: "ptr-arrow"
    }));
  }

  if (infinite && infinitePreloader) {
    infiniteEl = /*#__PURE__*/React.createElement(Preloader, {
      className: "infinite-scroll-preloader"
    });
  }

  var classes = classNames(className, 'page-content', {
    tab: tab,
    'tab-active': tabActive,
    'ptr-content': ptr,
    'ptr-bottom': ptrBottom,
    'infinite-scroll-content': infinite,
    'infinite-scroll-top': infiniteTop,
    'hide-bars-on-scroll': hideBarsOnScroll,
    'hide-navbar-on-scroll': hideNavbarOnScroll,
    'hide-toolbar-on-scroll': hideToolbarOnScroll,
    'messages-content': messagesContent,
    'login-screen-content': loginScreen
  }, colorClasses(props));
  return /*#__PURE__*/React.createElement("div", _extends({
    id: id,
    style: style,
    className: classes,
    "data-ptr-distance": ptrDistance || undefined,
    "data-ptr-mousewheel": ptrMousewheel || undefined,
    "data-infinite-distance": infiniteDistance || undefined,
    ref: elRef
  }, extraAttrs), ptrBottom ? null : ptrEl, infiniteTop ? infiniteEl : null, children, infiniteTop ? null : infiniteEl, ptrBottom ? ptrEl : null);
});
PageContent.displayName = 'f7-page-content';
export default PageContent;